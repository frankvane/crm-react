{
    "sourceFile": "src/store/modules/tab.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1746088704323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088927333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,12 +36,13 @@\n       const newTabs = state.tabs.filter((tab) => tab.key !== key);\r\n       let newActiveTab = state.activeTab;\r\n \r\n       if (key === state.activeTab) {\r\n-        newActiveTab = newTabs[targetIndex]?.key || \r\n-                      newTabs[targetIndex - 1]?.key || \r\n-                      newTabs[0]?.key || \r\n-                      \"/dashboard\";\r\n+        newActiveTab =\r\n+          newTabs[targetIndex]?.key ||\r\n+          newTabs[targetIndex - 1]?.key ||\r\n+          newTabs[0]?.key ||\r\n+          \"/dashboard\";\r\n       }\r\n \r\n       return {\r\n         tabs: newTabs,\r\n@@ -49,5 +50,5 @@\n       };\r\n     }),\r\n \r\n   setActiveTab: (key) => set({ activeTab: key }),\r\n-})); \n\\ No newline at end of file\n+}));\r\n"
                },
                {
                    "date": 1746090486713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,12 @@\n   tabs: Tab[];\r\n   activeTab: string;\r\n   addTab: (tab: Tab) => void;\r\n   removeTab: (key: string) => void;\r\n-  setActiveTab: (key: string) => void;\r\n+  removeOtherTabs: (key: string) => void;\r\n+  removeLeftTabs: (key: string) => void;\r\n+  removeRightTabs: (key: string) => void;\r\n+  removeAllTabs: () => void;\r\n }\r\n \r\n export const useTabStore = create<TabState>((set) => ({\r\n   tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n@@ -29,26 +32,54 @@\n     }),\r\n \r\n   removeTab: (key) =>\r\n     set((state) => {\r\n-      const targetIndex = state.tabs.findIndex((tab) => tab.key === key);\r\n-      if (targetIndex === -1) return state;\r\n-\r\n+      if (state.tabs.length === 1) {\r\n+        return {};\r\n+      }\r\n       const newTabs = state.tabs.filter((tab) => tab.key !== key);\r\n-      let newActiveTab = state.activeTab;\r\n-\r\n-      if (key === state.activeTab) {\r\n-        newActiveTab =\r\n-          newTabs[targetIndex]?.key ||\r\n-          newTabs[targetIndex - 1]?.key ||\r\n-          newTabs[0]?.key ||\r\n-          \"/dashboard\";\r\n-      }\r\n-\r\n+      const newActiveTab =\r\n+        state.activeTab === key\r\n+          ? newTabs[newTabs.length - 1].key\r\n+          : state.activeTab;\r\n       return {\r\n         tabs: newTabs,\r\n         activeTab: newActiveTab,\r\n       };\r\n     }),\r\n \r\n-  setActiveTab: (key) => set({ activeTab: key }),\r\n+  removeOtherTabs: (key) =>\r\n+    set((state) => {\r\n+      const targetTab = state.tabs.find((tab) => tab.key === key);\r\n+      if (!targetTab) return {};\r\n+      return {\r\n+        tabs: [targetTab],\r\n+        activeTab: key,\r\n+      };\r\n+    }),\r\n+\r\n+  removeLeftTabs: (key) =>\r\n+    set((state) => {\r\n+      const index = state.tabs.findIndex((tab) => tab.key === key);\r\n+      if (index === -1) return {};\r\n+      return {\r\n+        tabs: state.tabs.slice(index),\r\n+        activeTab: key,\r\n+      };\r\n+    }),\r\n+\r\n+  removeRightTabs: (key) =>\r\n+    set((state) => {\r\n+      const index = state.tabs.findIndex((tab) => tab.key === key);\r\n+      if (index === -1) return {};\r\n+      return {\r\n+        tabs: state.tabs.slice(0, index + 1),\r\n+        activeTab: key,\r\n+      };\r\n+    }),\r\n+\r\n+  removeAllTabs: () =>\r\n+    set({\r\n+      tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n+      activeTab: \"/dashboard\",\r\n+    }),\r\n }));\r\n"
                },
                {
                    "date": 1746141611083,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,11 +15,13 @@\n   removeRightTabs: (key: string) => void;\r\n   removeAllTabs: () => void;\r\n }\r\n \r\n+const DEFAULT_TAB = { key: \"/app/dashboard\", label: \"仪表盘\" };\r\n+\r\n export const useTabStore = create<TabState>((set) => ({\r\n-  tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n-  activeTab: \"/dashboard\",\r\n+  tabs: [DEFAULT_TAB],\r\n+  activeTab: DEFAULT_TAB.key,\r\n \r\n   addTab: (tab) =>\r\n     set((state) => {\r\n       if (state.tabs.some((t) => t.key === tab.key)) {\r\n@@ -32,11 +34,12 @@\n     }),\r\n \r\n   removeTab: (key) =>\r\n     set((state) => {\r\n-      if (state.tabs.length === 1) {\r\n-        return {};\r\n+      if (key === DEFAULT_TAB.key) {\r\n+        return state;\r\n       }\r\n+\r\n       const newTabs = state.tabs.filter((tab) => tab.key !== key);\r\n       const newActiveTab =\r\n         state.activeTab === key\r\n           ? newTabs[newTabs.length - 1].key\r\n@@ -49,37 +52,55 @@\n \r\n   removeOtherTabs: (key) =>\r\n     set((state) => {\r\n       const targetTab = state.tabs.find((tab) => tab.key === key);\r\n-      if (!targetTab) return {};\r\n+      if (!targetTab) return state;\r\n+      \r\n+      const newTabs = [DEFAULT_TAB];\r\n+      if (key !== DEFAULT_TAB.key) {\r\n+        newTabs.push(targetTab);\r\n+      }\r\n+      \r\n       return {\r\n-        tabs: [targetTab],\r\n+        tabs: newTabs,\r\n         activeTab: key,\r\n       };\r\n     }),\r\n \r\n   removeLeftTabs: (key) =>\r\n     set((state) => {\r\n       const index = state.tabs.findIndex((tab) => tab.key === key);\r\n-      if (index === -1) return {};\r\n+      if (index === -1) return state;\r\n+\r\n+      const remainingTabs = state.tabs.slice(index);\r\n+      const newTabs = remainingTabs.some(tab => tab.key === DEFAULT_TAB.key)\r\n+        ? remainingTabs\r\n+        : [DEFAULT_TAB, ...remainingTabs];\r\n+\r\n       return {\r\n-        tabs: state.tabs.slice(index),\r\n+        tabs: newTabs,\r\n         activeTab: key,\r\n       };\r\n     }),\r\n \r\n   removeRightTabs: (key) =>\r\n     set((state) => {\r\n       const index = state.tabs.findIndex((tab) => tab.key === key);\r\n-      if (index === -1) return {};\r\n+      if (index === -1) return state;\r\n+\r\n+      const remainingTabs = state.tabs.slice(0, index + 1);\r\n+      const newTabs = remainingTabs.some(tab => tab.key === DEFAULT_TAB.key)\r\n+        ? remainingTabs\r\n+        : [DEFAULT_TAB, ...remainingTabs.filter(tab => tab.key !== DEFAULT_TAB.key)];\r\n+\r\n       return {\r\n-        tabs: state.tabs.slice(0, index + 1),\r\n+        tabs: newTabs,\r\n         activeTab: key,\r\n       };\r\n     }),\r\n \r\n   removeAllTabs: () =>\r\n     set({\r\n-      tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n-      activeTab: \"/dashboard\",\r\n+      tabs: [DEFAULT_TAB],\r\n+      activeTab: DEFAULT_TAB.key,\r\n     }),\r\n }));\r\n"
                },
                {
                    "date": 1746141664392,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,14 +53,14 @@\n   removeOtherTabs: (key) =>\r\n     set((state) => {\r\n       const targetTab = state.tabs.find((tab) => tab.key === key);\r\n       if (!targetTab) return state;\r\n-      \r\n+\r\n       const newTabs = [DEFAULT_TAB];\r\n       if (key !== DEFAULT_TAB.key) {\r\n         newTabs.push(targetTab);\r\n       }\r\n-      \r\n+\r\n       return {\r\n         tabs: newTabs,\r\n         activeTab: key,\r\n       };\r\n@@ -71,9 +71,9 @@\n       const index = state.tabs.findIndex((tab) => tab.key === key);\r\n       if (index === -1) return state;\r\n \r\n       const remainingTabs = state.tabs.slice(index);\r\n-      const newTabs = remainingTabs.some(tab => tab.key === DEFAULT_TAB.key)\r\n+      const newTabs = remainingTabs.some((tab) => tab.key === DEFAULT_TAB.key)\r\n         ? remainingTabs\r\n         : [DEFAULT_TAB, ...remainingTabs];\r\n \r\n       return {\r\n@@ -87,11 +87,14 @@\n       const index = state.tabs.findIndex((tab) => tab.key === key);\r\n       if (index === -1) return state;\r\n \r\n       const remainingTabs = state.tabs.slice(0, index + 1);\r\n-      const newTabs = remainingTabs.some(tab => tab.key === DEFAULT_TAB.key)\r\n+      const newTabs = remainingTabs.some((tab) => tab.key === DEFAULT_TAB.key)\r\n         ? remainingTabs\r\n-        : [DEFAULT_TAB, ...remainingTabs.filter(tab => tab.key !== DEFAULT_TAB.key)];\r\n+        : [\r\n+            DEFAULT_TAB,\r\n+            ...remainingTabs.filter((tab) => tab.key !== DEFAULT_TAB.key),\r\n+          ];\r\n \r\n       return {\r\n         tabs: newTabs,\r\n         activeTab: key,\r\n"
                },
                {
                    "date": 1746241373054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,12 +43,12 @@\n       const newActiveTab =\r\n         state.activeTab === key\r\n           ? newTabs[newTabs.length - 1].key\r\n           : state.activeTab;\r\n-          console.log({\r\n-            tabs: newTabs,\r\n-            activeTab: newActiveTab,\r\n-          })\r\n+      console.log({\r\n+        tabs: newTabs,\r\n+        activeTab: newActiveTab,\r\n+      });\r\n       return {\r\n         tabs: newTabs,\r\n         activeTab: newActiveTab,\r\n       };\r\n"
                }
            ],
            "date": 1746088704323,
            "name": "Commit-0",
            "content": "import { create } from \"zustand\";\r\n\r\ninterface Tab {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ninterface TabState {\r\n  tabs: Tab[];\r\n  activeTab: string;\r\n  addTab: (tab: Tab) => void;\r\n  removeTab: (key: string) => void;\r\n  setActiveTab: (key: string) => void;\r\n}\r\n\r\nexport const useTabStore = create<TabState>((set) => ({\r\n  tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n  activeTab: \"/dashboard\",\r\n\r\n  addTab: (tab) =>\r\n    set((state) => {\r\n      if (state.tabs.some((t) => t.key === tab.key)) {\r\n        return { activeTab: tab.key };\r\n      }\r\n      return {\r\n        tabs: [...state.tabs, tab],\r\n        activeTab: tab.key,\r\n      };\r\n    }),\r\n\r\n  removeTab: (key) =>\r\n    set((state) => {\r\n      const targetIndex = state.tabs.findIndex((tab) => tab.key === key);\r\n      if (targetIndex === -1) return state;\r\n\r\n      const newTabs = state.tabs.filter((tab) => tab.key !== key);\r\n      let newActiveTab = state.activeTab;\r\n\r\n      if (key === state.activeTab) {\r\n        newActiveTab = newTabs[targetIndex]?.key || \r\n                      newTabs[targetIndex - 1]?.key || \r\n                      newTabs[0]?.key || \r\n                      \"/dashboard\";\r\n      }\r\n\r\n      return {\r\n        tabs: newTabs,\r\n        activeTab: newActiveTab,\r\n      };\r\n    }),\r\n\r\n  setActiveTab: (key) => set({ activeTab: key }),\r\n})); "
        }
    ]
}