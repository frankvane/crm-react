{
    "sourceFile": "src/components/TabBar/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1746088331859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088728221,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import { Tabs } from \"antd\";\r\n import styles from \"./style.module.less\";\r\n import { useNavigate } from \"react-router-dom\";\r\n-import { useTabStore } from \"@/stores/tab\";\r\n+import { useTabStore } from \"@/store/modules/tab\";\r\n \r\n const TabBar = () => {\r\n   const navigate = useNavigate();\r\n   const { tabs, activeTab, addTab, removeTab, setActiveTab } = useTabStore();\r\n"
                },
                {
                    "date": 1746088927341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,5 +40,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default TabBar; \n\\ No newline at end of file\n+export default TabBar;\r\n"
                },
                {
                    "date": 1746090227388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,16 @@\n-import { Tabs } from \"antd\";\r\n+import {\r\n+  CloseOutlined,\r\n+  LeftOutlined,\r\n+  ReloadOutlined,\r\n+  RightOutlined,\r\n+  VerticalAlignMiddleOutlined,\r\n+} from \"@ant-design/icons\";\r\n+import { Dropdown, Tabs, Tooltip } from \"antd\";\r\n+\r\n+import type { TabsProps } from \"antd\";\r\n import styles from \"./style.module.less\";\r\n+import { useMemo } from \"react\";\r\n import { useNavigate } from \"react-router-dom\";\r\n import { useTabStore } from \"@/store/modules/tab\";\r\n \r\n const TabBar = () => {\r\n@@ -22,21 +32,118 @@\n       removeTab(targetKey);\r\n     }\r\n   };\r\n \r\n+  // 刷新当前页面\r\n+  const handleRefresh = () => {\r\n+    window.location.reload();\r\n+  };\r\n+\r\n+  // 关闭其他标签页\r\n+  const closeOtherTabs = () => {\r\n+    const currentTab = tabs.find((tab) => tab.key === activeTab);\r\n+    if (currentTab) {\r\n+      useTabStore.setState({ tabs: [currentTab] });\r\n+    }\r\n+  };\r\n+\r\n+  // 关闭所有标签页\r\n+  const closeAllTabs = () => {\r\n+    useTabStore.setState({ tabs: [] });\r\n+    navigate(\"/app/dashboard\");\r\n+  };\r\n+\r\n+  // 关闭左侧标签页\r\n+  const closeLeftTabs = () => {\r\n+    const currentIndex = tabs.findIndex((tab) => tab.key === activeTab);\r\n+    if (currentIndex > -1) {\r\n+      useTabStore.setState({\r\n+        tabs: tabs.slice(currentIndex),\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  // 关闭右侧标签页\r\n+  const closeRightTabs = () => {\r\n+    const currentIndex = tabs.findIndex((tab) => tab.key === activeTab);\r\n+    if (currentIndex > -1) {\r\n+      useTabStore.setState({\r\n+        tabs: tabs.slice(0, currentIndex + 1),\r\n+      });\r\n+    }\r\n+  };\r\n+\r\n+  // 更多操作菜单\r\n+  const moreItems = useMemo(\r\n+    () => [\r\n+      {\r\n+        key: \"refresh\",\r\n+        label: \"刷新当前标签页\",\r\n+        icon: <ReloadOutlined />,\r\n+        onClick: handleRefresh,\r\n+      },\r\n+      {\r\n+        key: \"closeOthers\",\r\n+        label: \"关闭其他标签页\",\r\n+        icon: <CloseOutlined />,\r\n+        onClick: closeOtherTabs,\r\n+      },\r\n+      {\r\n+        key: \"closeAll\",\r\n+        label: \"关闭所有标签页\",\r\n+        icon: <CloseOutlined />,\r\n+        onClick: closeAllTabs,\r\n+      },\r\n+      {\r\n+        key: \"closeLeft\",\r\n+        label: \"关闭左侧标签页\",\r\n+        icon: <LeftOutlined />,\r\n+        onClick: closeLeftTabs,\r\n+        disabled: tabs.findIndex((tab) => tab.key === activeTab) === 0,\r\n+      },\r\n+      {\r\n+        key: \"closeRight\",\r\n+        label: \"关闭右侧标签页\",\r\n+        icon: <RightOutlined />,\r\n+        onClick: closeRightTabs,\r\n+        disabled:\r\n+          tabs.findIndex((tab) => tab.key === activeTab) === tabs.length - 1,\r\n+      },\r\n+    ],\r\n+    [activeTab, tabs]\r\n+  );\r\n+\r\n+  // 标签页操作区\r\n+  const operations = {\r\n+    right: (\r\n+      <div className={styles.operations}>\r\n+        <Tooltip title=\"刷新当前页面\">\r\n+          <ReloadOutlined className={styles.action} onClick={handleRefresh} />\r\n+        </Tooltip>\r\n+        <Dropdown menu={{ items: moreItems }} placement=\"bottomRight\">\r\n+          <VerticalAlignMiddleOutlined className={styles.action} />\r\n+        </Dropdown>\r\n+      </div>\r\n+    ),\r\n+  };\r\n+\r\n+  const items = tabs.map((tab) => ({\r\n+    key: tab.key,\r\n+    label: tab.label,\r\n+    closable: tabs.length > 1,\r\n+  }));\r\n+\r\n   return (\r\n     <div className={styles.tabBar}>\r\n       <Tabs\r\n         hideAdd\r\n         type=\"editable-card\"\r\n         activeKey={activeTab}\r\n         onChange={handleTabChange}\r\n         onEdit={handleTabEdit}\r\n-        items={tabs.map((tab) => ({\r\n-          key: tab.key,\r\n-          label: tab.label,\r\n-          closable: tabs.length > 1,\r\n-        }))}\r\n+        items={items}\r\n+        tabBarExtraContent={operations}\r\n+        tabBarStyle={{ margin: 0 }}\r\n       />\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1746090461537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,45 @@\n+import { Button, Dropdown, Tabs, Tooltip } from \"antd\";\r\n import {\r\n+  CloseCircleOutlined,\r\n   CloseOutlined,\r\n-  LeftOutlined,\r\n+  MoreOutlined,\r\n   ReloadOutlined,\r\n-  RightOutlined,\r\n-  VerticalAlignMiddleOutlined,\r\n+  VerticalLeftOutlined,\r\n+  VerticalRightOutlined,\r\n } from \"@ant-design/icons\";\r\n-import { Dropdown, Tabs, Tooltip } from \"antd\";\r\n+import React, { useMemo } from \"react\";\r\n+import { useLocation, useNavigate } from \"react-router-dom\";\r\n \r\n-import type { TabsProps } from \"antd\";\r\n import styles from \"./style.module.less\";\r\n-import { useMemo } from \"react\";\r\n-import { useNavigate } from \"react-router-dom\";\r\n import { useTabStore } from \"@/store/modules/tab\";\r\n \r\n-const TabBar = () => {\r\n+const menuMap: Record<string, string> = {\r\n+  \"/dashboard\": \"仪表盘\",\r\n+  \"/permission/roles\": \"角色管理\",\r\n+  \"/permission/resources\": \"资源管理\",\r\n+  \"/permission/users\": \"用户管理\",\r\n+  \"/category/category-types\": \"分类类型管理\",\r\n+  \"/category/categories\": \"分类管理\",\r\n+};\r\n+\r\n+const TabBar: React.FC = () => {\r\n   const navigate = useNavigate();\r\n-  const { tabs, activeTab, addTab, removeTab, setActiveTab } = useTabStore();\r\n+  const location = useLocation();\r\n+  const {\r\n+    tabs,\r\n+    activeTab,\r\n+    removeTab,\r\n+    removeOtherTabs,\r\n+    removeLeftTabs,\r\n+    removeRightTabs,\r\n+    removeAllTabs,\r\n+  } = useTabStore();\r\n \r\n-  // 处理标签页切换\r\n   const handleTabChange = (key: string) => {\r\n-    setActiveTab(key);\r\n     navigate(key);\r\n   };\r\n \r\n-  // 处理标签页编辑（关闭）\r\n   const handleTabEdit = (\r\n     targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n     action: \"add\" | \"remove\"\r\n   ) => {\r\n@@ -32,104 +47,64 @@\n       removeTab(targetKey);\r\n     }\r\n   };\r\n \r\n-  // 刷新当前页面\r\n-  const handleRefresh = () => {\r\n+  const refreshPage = () => {\r\n     window.location.reload();\r\n   };\r\n \r\n-  // 关闭其他标签页\r\n-  const closeOtherTabs = () => {\r\n-    const currentTab = tabs.find((tab) => tab.key === activeTab);\r\n-    if (currentTab) {\r\n-      useTabStore.setState({ tabs: [currentTab] });\r\n-    }\r\n-  };\r\n-\r\n-  // 关闭所有标签页\r\n-  const closeAllTabs = () => {\r\n-    useTabStore.setState({ tabs: [] });\r\n-    navigate(\"/app/dashboard\");\r\n-  };\r\n-\r\n-  // 关闭左侧标签页\r\n-  const closeLeftTabs = () => {\r\n-    const currentIndex = tabs.findIndex((tab) => tab.key === activeTab);\r\n-    if (currentIndex > -1) {\r\n-      useTabStore.setState({\r\n-        tabs: tabs.slice(currentIndex),\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  // 关闭右侧标签页\r\n-  const closeRightTabs = () => {\r\n-    const currentIndex = tabs.findIndex((tab) => tab.key === activeTab);\r\n-    if (currentIndex > -1) {\r\n-      useTabStore.setState({\r\n-        tabs: tabs.slice(0, currentIndex + 1),\r\n-      });\r\n-    }\r\n-  };\r\n-\r\n-  // 更多操作菜单\r\n   const moreItems = useMemo(\r\n     () => [\r\n       {\r\n-        key: \"refresh\",\r\n-        label: \"刷新当前标签页\",\r\n-        icon: <ReloadOutlined />,\r\n-        onClick: handleRefresh,\r\n-      },\r\n-      {\r\n         key: \"closeOthers\",\r\n-        label: \"关闭其他标签页\",\r\n-        icon: <CloseOutlined />,\r\n-        onClick: closeOtherTabs,\r\n+        label: \"关闭其他\",\r\n+        icon: <CloseCircleOutlined />,\r\n+        onClick: () => removeOtherTabs(location.pathname),\r\n       },\r\n       {\r\n-        key: \"closeAll\",\r\n-        label: \"关闭所有标签页\",\r\n-        icon: <CloseOutlined />,\r\n-        onClick: closeAllTabs,\r\n-      },\r\n-      {\r\n         key: \"closeLeft\",\r\n-        label: \"关闭左侧标签页\",\r\n-        icon: <LeftOutlined />,\r\n-        onClick: closeLeftTabs,\r\n-        disabled: tabs.findIndex((tab) => tab.key === activeTab) === 0,\r\n+        label: \"关闭左侧\",\r\n+        icon: <VerticalRightOutlined />,\r\n+        onClick: () => removeLeftTabs(location.pathname),\r\n       },\r\n       {\r\n         key: \"closeRight\",\r\n-        label: \"关闭右侧标签页\",\r\n-        icon: <RightOutlined />,\r\n-        onClick: closeRightTabs,\r\n-        disabled:\r\n-          tabs.findIndex((tab) => tab.key === activeTab) === tabs.length - 1,\r\n+        label: \"关闭右侧\",\r\n+        icon: <VerticalLeftOutlined />,\r\n+        onClick: () => removeRightTabs(location.pathname),\r\n       },\r\n+      {\r\n+        key: \"closeAll\",\r\n+        label: \"关闭全部\",\r\n+        icon: <CloseOutlined />,\r\n+        onClick: () => removeAllTabs(),\r\n+      },\r\n     ],\r\n-    [activeTab, tabs]\r\n+    [\r\n+      location.pathname,\r\n+      removeOtherTabs,\r\n+      removeLeftTabs,\r\n+      removeRightTabs,\r\n+      removeAllTabs,\r\n+    ]\r\n   );\r\n \r\n-  // 标签页操作区\r\n   const operations = {\r\n     right: (\r\n       <div className={styles.operations}>\r\n-        <Tooltip title=\"刷新当前页面\">\r\n-          <ReloadOutlined className={styles.action} onClick={handleRefresh} />\r\n+        <Tooltip title=\"刷新当前页\">\r\n+          <Button type=\"text\" icon={<ReloadOutlined />} onClick={refreshPage} />\r\n         </Tooltip>\r\n         <Dropdown menu={{ items: moreItems }} placement=\"bottomRight\">\r\n-          <VerticalAlignMiddleOutlined className={styles.action} />\r\n+          <Button type=\"text\" icon={<MoreOutlined />} />\r\n         </Dropdown>\r\n       </div>\r\n     ),\r\n   };\r\n \r\n   const items = tabs.map((tab) => ({\r\n     key: tab.key,\r\n-    label: tab.label,\r\n+    label: menuMap[tab.key] || \"未知页面\",\r\n     closable: tabs.length > 1,\r\n   }));\r\n \r\n   return (\r\n@@ -141,9 +116,8 @@\n         onChange={handleTabChange}\r\n         onEdit={handleTabEdit}\r\n         items={items}\r\n         tabBarExtraContent={operations}\r\n-        tabBarStyle={{ margin: 0 }}\r\n       />\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1746090763725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,14 +13,14 @@\n import styles from \"./style.module.less\";\r\n import { useTabStore } from \"@/store/modules/tab\";\r\n \r\n const menuMap: Record<string, string> = {\r\n-  \"/dashboard\": \"仪表盘\",\r\n-  \"/permission/roles\": \"角色管理\",\r\n-  \"/permission/resources\": \"资源管理\",\r\n-  \"/permission/users\": \"用户管理\",\r\n-  \"/category/category-types\": \"分类类型管理\",\r\n-  \"/category/categories\": \"分类管理\",\r\n+  \"/app/dashboard\": \"仪表盘\",\r\n+  \"/app/permission/roles\": \"角色管理\",\r\n+  \"/app/permission/resources\": \"资源管理\",\r\n+  \"/app/permission/users\": \"用户管理\",\r\n+  \"/app/category/category-types\": \"分类类型管理\",\r\n+  \"/app/category/categories\": \"分类管理\",\r\n };\r\n \r\n const TabBar: React.FC = () => {\r\n   const navigate = useNavigate();\r\n"
                },
                {
                    "date": 1746141591761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,19 @@\n     targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n     action: \"add\" | \"remove\"\r\n   ) => {\r\n     if (action === \"remove\" && typeof targetKey === \"string\") {\r\n-      removeTab(targetKey);\r\n+      const tab = tabs.find(t => t.key === targetKey);\r\n+      if (tab && tab.key !== \"/app/dashboard\") {\r\n+        removeTab(targetKey);\r\n+        // 如果关闭的是当前标签，导航到前一个标签\r\n+        if (targetKey === location.pathname) {\r\n+          const currentIndex = tabs.findIndex(t => t.key === targetKey);\r\n+          if (currentIndex > 0) {\r\n+            navigate(tabs[currentIndex - 1].key);\r\n+          }\r\n+        }\r\n+      }\r\n     }\r\n   };\r\n \r\n   const refreshPage = () => {\r\n@@ -75,17 +85,21 @@\n       {\r\n         key: \"closeAll\",\r\n         label: \"关闭全部\",\r\n         icon: <CloseOutlined />,\r\n-        onClick: () => removeAllTabs(),\r\n+        onClick: () => {\r\n+          removeAllTabs();\r\n+          navigate(\"/app/dashboard\");\r\n+        },\r\n       },\r\n     ],\r\n     [\r\n       location.pathname,\r\n       removeOtherTabs,\r\n       removeLeftTabs,\r\n       removeRightTabs,\r\n       removeAllTabs,\r\n+      navigate,\r\n     ]\r\n   );\r\n \r\n   const operations = {\r\n@@ -103,9 +117,9 @@\n \r\n   const items = tabs.map((tab) => ({\r\n     key: tab.key,\r\n     label: menuMap[tab.key] || \"未知页面\",\r\n-    closable: tabs.length > 1,\r\n+    closable: tab.key !== \"/app/dashboard\" && tabs.length > 1,\r\n   }));\r\n \r\n   return (\r\n     <div className={styles.tabBar}>\r\n"
                },
                {
                    "date": 1746141664373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,14 +43,14 @@\n     targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n     action: \"add\" | \"remove\"\r\n   ) => {\r\n     if (action === \"remove\" && typeof targetKey === \"string\") {\r\n-      const tab = tabs.find(t => t.key === targetKey);\r\n+      const tab = tabs.find((t) => t.key === targetKey);\r\n       if (tab && tab.key !== \"/app/dashboard\") {\r\n         removeTab(targetKey);\r\n         // 如果关闭的是当前标签，导航到前一个标签\r\n         if (targetKey === location.pathname) {\r\n-          const currentIndex = tabs.findIndex(t => t.key === targetKey);\r\n+          const currentIndex = tabs.findIndex((t) => t.key === targetKey);\r\n           if (currentIndex > 0) {\r\n             navigate(tabs[currentIndex - 1].key);\r\n           }\r\n         }\r\n"
                }
            ],
            "date": 1746088331859,
            "name": "Commit-0",
            "content": "import { Tabs } from \"antd\";\r\nimport styles from \"./style.module.less\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTabStore } from \"@/stores/tab\";\r\n\r\nconst TabBar = () => {\r\n  const navigate = useNavigate();\r\n  const { tabs, activeTab, addTab, removeTab, setActiveTab } = useTabStore();\r\n\r\n  // 处理标签页切换\r\n  const handleTabChange = (key: string) => {\r\n    setActiveTab(key);\r\n    navigate(key);\r\n  };\r\n\r\n  // 处理标签页编辑（关闭）\r\n  const handleTabEdit = (\r\n    targetKey: React.MouseEvent | React.KeyboardEvent | string,\r\n    action: \"add\" | \"remove\"\r\n  ) => {\r\n    if (action === \"remove\" && typeof targetKey === \"string\") {\r\n      removeTab(targetKey);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.tabBar}>\r\n      <Tabs\r\n        hideAdd\r\n        type=\"editable-card\"\r\n        activeKey={activeTab}\r\n        onChange={handleTabChange}\r\n        onEdit={handleTabEdit}\r\n        items={tabs.map((tab) => ({\r\n          key: tab.key,\r\n          label: tab.label,\r\n          closable: tabs.length > 1,\r\n        }))}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabBar; "
        }
    ]
}