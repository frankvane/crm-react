{
    "sourceFile": "src/api/modules/auth.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1746086855915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746089656099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,18 @@\n-import type {\r\n-  IBaseResponse,\r\n-  ILoginParams,\r\n-  ILoginResult,\r\n-} from \"@/types/api/common\";\r\n+import type { ILoginParams, ILoginResult, IResponse } from \"@/types/api/common\";\r\n \r\n import request from \"../request\";\r\n \r\n export const authApi = {\r\n   login: (data: ILoginParams) =>\r\n-    request.post<IBaseResponse<ILoginResult>>(\"/auth/login\", data),\r\n+    request.post<IResponse<ILoginResult>>(\"/auth/login\", data),\r\n \r\n-  logout: () => request.post<IBaseResponse<null>>(\"/auth/logout\"),\r\n+  logout: () => request.post<IResponse<null>>(\"/auth/logout\"),\r\n \r\n   refreshToken: (refreshToken: string) =>\r\n-    request.post<IBaseResponse<{ token: string }>>(\"/auth/refresh-token\", {\r\n+    request.post<IResponse<{ token: string }>>(\"/auth/refresh-token\", {\r\n       refreshToken,\r\n     }),\r\n \r\n   getCurrentUser: () =>\r\n-    request.get<IBaseResponse<ILoginResult[\"user\"]>>(\"/auth/current-user\"),\r\n+    request.get<IResponse<ILoginResult[\"user\"]>>(\"/auth/current-user\"),\r\n };\r\n"
                },
                {
                    "date": 1746089937462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import type { ILoginParams, ILoginResult, IResponse } from \"@/types/api/common\";\r\n \r\n-import request from \"../request\";\r\n+import request from \"@/utils/request\";\r\n \r\n export const authApi = {\r\n   login: (data: ILoginParams) =>\r\n     request.post<IResponse<ILoginResult>>(\"/auth/login\", data),\r\n"
                },
                {
                    "date": 1746091271648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,21 @@\n import type { ILoginParams, ILoginResult, IResponse } from \"@/types/api/common\";\r\n \r\n import request from \"@/utils/request\";\r\n \r\n+interface IRefreshTokenResult {\r\n+  accessToken: string;\r\n+  refreshToken: string;\r\n+}\r\n+\r\n export const authApi = {\r\n   login: (data: ILoginParams) =>\r\n     request.post<IResponse<ILoginResult>>(\"/auth/login\", data),\r\n \r\n   logout: () => request.post<IResponse<null>>(\"/auth/logout\"),\r\n \r\n   refreshToken: (refreshToken: string) =>\r\n-    request.post<IResponse<{ token: string }>>(\"/auth/refresh-token\", {\r\n+    request.post<IResponse<IRefreshTokenResult>>(\"/auth/refresh\", {\r\n       refreshToken,\r\n     }),\r\n \r\n   getCurrentUser: () =>\r\n"
                },
                {
                    "date": 1746096796878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import type { ILoginParams, ILoginResult, IResponse } from \"@/types/api/common\";\r\n+import type { ILoginParams, ILoginResult } from \"@/types/api/common\";\r\n \r\n import request from \"@/utils/request\";\r\n \r\n interface IRefreshTokenResult {\r\n@@ -7,17 +7,16 @@\n   refreshToken: string;\r\n }\r\n \r\n export const authApi = {\r\n-  login: (data: ILoginParams) =>\r\n-    request.post<IResponse<ILoginResult>>(\"/auth/login\", data),\r\n+  login: (data: ILoginParams): Promise<ILoginResult> =>\r\n+    request.post(\"/auth/login\", data),\r\n \r\n-  logout: () => request.post<IResponse<null>>(\"/auth/logout\"),\r\n+  logout: () => request.post(\"/auth/logout\"),\r\n \r\n-  refreshToken: (refreshToken: string) =>\r\n-    request.post<IResponse<IRefreshTokenResult>>(\"/auth/refresh\", {\r\n+  refreshToken: (refreshToken: string): Promise<IRefreshTokenResult> =>\r\n+    request.post(\"/auth/refresh\", {\r\n       refreshToken,\r\n     }),\r\n \r\n-  getCurrentUser: () =>\r\n-    request.get<IResponse<ILoginResult[\"user\"]>>(\"/auth/current-user\"),\r\n+  getCurrentUser: () => request.get(\"/auth/current-user\"),\r\n };\r\n"
                },
                {
                    "date": 1746198813492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,6 +17,6 @@\n     request.post(\"/auth/refresh\", {\r\n       refreshToken,\r\n     }),\r\n \r\n-  getCurrentUser: () => request.get(\"/auth/current-user\"),\r\n+  getCurrentUser: () => request.get(\"/users/me\"),\r\n };\r\n"
                },
                {
                    "date": 1746200070682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,9 +10,13 @@\n export const authApi = {\r\n   login: (data: ILoginParams): Promise<ILoginResult> =>\r\n     request.post(\"/auth/login\", data),\r\n \r\n-  logout: () => request.post(\"/auth/logout\"),\r\n+  // logout需要传递refreshToken\r\n+  logout: (refreshToken: string) =>\r\n+    request.post(\"/auth/logout\", {\r\n+      refreshToken,\r\n+    }),\r\n \r\n   refreshToken: (refreshToken: string): Promise<IRefreshTokenResult> =>\r\n     request.post(\"/auth/refresh\", {\r\n       refreshToken,\r\n"
                }
            ],
            "date": 1746086855915,
            "name": "Commit-0",
            "content": "import type {\r\n  IBaseResponse,\r\n  ILoginParams,\r\n  ILoginResult,\r\n} from \"@/types/api/common\";\r\n\r\nimport request from \"../request\";\r\n\r\nexport const authApi = {\r\n  login: (data: ILoginParams) =>\r\n    request.post<IBaseResponse<ILoginResult>>(\"/auth/login\", data),\r\n\r\n  logout: () => request.post<IBaseResponse<null>>(\"/auth/logout\"),\r\n\r\n  refreshToken: (refreshToken: string) =>\r\n    request.post<IBaseResponse<{ token: string }>>(\"/auth/refresh-token\", {\r\n      refreshToken,\r\n    }),\r\n\r\n  getCurrentUser: () =>\r\n    request.get<IBaseResponse<ILoginResult[\"user\"]>>(\"/auth/current-user\"),\r\n};\r\n"
        }
    ]
}