{
    "sourceFile": "src/stores/tab.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746088362325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088927339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,5 +47,5 @@\n       };\r\n     }),\r\n \r\n   setActiveTab: (key) => set({ activeTab: key }),\r\n-})); \n\\ No newline at end of file\n+}));\r\n"
                }
            ],
            "date": 1746088362325,
            "name": "Commit-0",
            "content": "import { create } from \"zustand\";\r\n\r\ninterface Tab {\r\n  key: string;\r\n  label: string;\r\n}\r\n\r\ninterface TabState {\r\n  tabs: Tab[];\r\n  activeTab: string;\r\n  addTab: (tab: Tab) => void;\r\n  removeTab: (key: string) => void;\r\n  setActiveTab: (key: string) => void;\r\n}\r\n\r\nexport const useTabStore = create<TabState>((set) => ({\r\n  tabs: [{ key: \"/dashboard\", label: \"仪表盘\" }],\r\n  activeTab: \"/dashboard\",\r\n\r\n  addTab: (tab) =>\r\n    set((state) => {\r\n      if (state.tabs.some((t) => t.key === tab.key)) {\r\n        return { activeTab: tab.key };\r\n      }\r\n      return {\r\n        tabs: [...state.tabs, tab],\r\n        activeTab: tab.key,\r\n      };\r\n    }),\r\n\r\n  removeTab: (key) =>\r\n    set((state) => {\r\n      const targetIndex = state.tabs.findIndex((tab) => tab.key === key);\r\n      if (targetIndex === -1) return state;\r\n\r\n      const newTabs = state.tabs.filter((tab) => tab.key !== key);\r\n      let newActiveTab = state.activeTab;\r\n\r\n      if (key === state.activeTab) {\r\n        newActiveTab =\r\n          newTabs[targetIndex] || newTabs[targetIndex - 1] || newTabs[0].key;\r\n      }\r\n\r\n      return {\r\n        tabs: newTabs,\r\n        activeTab: newActiveTab,\r\n      };\r\n    }),\r\n\r\n  setActiveTab: (key) => set({ activeTab: key }),\r\n})); "
        }
    ]
}