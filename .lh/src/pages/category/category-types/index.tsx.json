{
    "sourceFile": "src/pages/category/category-types/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1746097853313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746099085192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -202,15 +202,15 @@\n         </div>\r\n \r\n         <Table\r\n           columns={columns}\r\n-          dataSource={categoryTypesData?.data.list}\r\n+          dataSource={categoryTypesData?.list}\r\n           rowKey=\"id\"\r\n           loading={isLoading}\r\n           pagination={{\r\n             current: currentPage,\r\n             pageSize,\r\n-            total: categoryTypesData?.data.pagination?.total || 0,\r\n+            total: categoryTypesData?.pagination?.total || 0,\r\n             onChange: (page, size) => {\r\n               setCurrentPage(page);\r\n               setPageSize(size);\r\n             },\r\n"
                },
                {
                    "date": 1746107473201,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,24 +11,29 @@\n   message,\n } from \"antd\";\n import type {\n   ICategoryType,\n+  ICategoryTypeListResponse,\n   ICategoryTypeQueryParams,\n } from \"@/types/api/category-type\";\n import {\n   deleteCategoryType,\n   getCategoryTypes,\n   toggleCategoryTypeStatus,\n } from \"@/api/modules/category-type\";\n+import { useCallback, useState } from \"react\";\n import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n \n import CategoryTypeForm from \"./components/CategoryTypeForm\";\n+import { ExclamationCircleOutlined } from \"@ant-design/icons\";\n+import dayjs from \"dayjs\";\n import styles from \"./style.module.less\";\n-import { useState } from \"react\";\n+import { useNavigate } from \"react-router-dom\";\n \n const { confirm } = Modal;\n \n const CategoryTypes = () => {\n+  const navigate = useNavigate();\n   const queryClient = useQueryClient();\n   const [form] = Form.useForm<ICategoryTypeQueryParams>();\n   const [modalVisible, setModalVisible] = useState(false);\n   const [editingCategoryType, setEditingCategoryType] =\n@@ -38,71 +43,66 @@\n   const [searchValues, setSearchValues] = useState<\n     Partial<ICategoryTypeQueryParams>\n   >({});\n \n-  // 获取分类类型列表\n-  const { data: categoryTypesData, isLoading } = useQuery({\n-    queryKey: [\"categoryTypes\", currentPage, pageSize, searchValues],\n-    queryFn: () =>\n-      getCategoryTypes({\n-        page: currentPage,\n-        pageSize,\n-        ...searchValues,\n-      }),\n+  const { data: categoryTypesData } = useQuery<\n+    IResponse<ICategoryTypeListResponse>\n+  >({\n+    queryKey: [\"categoryTypes\"],\n+    queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\n   });\n \n-  // 删除分类类型\n-  const deleteMutation = useMutation({\n-    mutationFn: deleteCategoryType,\n-    onSuccess: () => {\n-      message.success(\"删除成功\");\n-      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+  const handleDelete = useCallback(\n+    (id: number) => {\n+      confirm({\n+        title: \"确认删除\",\n+        icon: <ExclamationCircleOutlined />,\n+        content: \"确定要删除这个分类类型吗？\",\n+        okText: \"确定\",\n+        okType: \"danger\",\n+        cancelText: \"取消\",\n+        onOk: async () => {\n+          try {\n+            await deleteCategoryType(id);\n+            message.success(\"删除成功\");\n+            queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+          } catch (err) {\n+            message.error(\"删除失败\");\n+            console.error(err);\n+          }\n+        },\n+      });\n     },\n-  });\n+    [queryClient]\n+  );\n \n-  // 切换分类类型状态\n-  const toggleStatusMutation = useMutation({\n-    mutationFn: toggleCategoryTypeStatus,\n-    onSuccess: () => {\n-      message.success(\"状态更新成功\");\n-      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+  const handleToggleStatus = useCallback(\n+    async (id: number) => {\n+      try {\n+        await toggleCategoryTypeStatus(id);\n+        message.success(\"状态更新成功\");\n+        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+      } catch (err) {\n+        message.error(\"状态更新失败\");\n+        console.error(err);\n+      }\n     },\n-  });\n+    [queryClient]\n+  );\n \n-  // 处理删除分类类型\n-  const handleDelete = (id: number) => {\n-    confirm({\n-      title: \"确认删除\",\n-      content: \"确定要删除这个分类类型吗？此操作不可恢复。\",\n-      okText: \"确认\",\n-      cancelText: \"取消\",\n-      onOk: () => deleteMutation.mutate(id),\n-    });\n-  };\n-\n-  // 处理切换分类类型状态\n-  const handleToggleStatus = (id: number) => {\n-    toggleStatusMutation.mutate(id);\n-  };\n-\n-  // 表格列配置\n-  const columns = [\n+  const columns: ColumnsType<ICategoryType> = [\n     {\n-      title: \"分类类型名称\",\n+      title: \"ID\",\n+      dataIndex: \"id\",\n+      key: \"id\",\n+      width: 80,\n+    },\n+    {\n+      title: \"类型名称\",\n       dataIndex: \"name\",\n       key: \"name\",\n     },\n     {\n-      title: \"分类类型编码\",\n-      dataIndex: \"code\",\n-      key: \"code\",\n-    },\n-    {\n-      title: \"描述\",\n-      dataIndex: \"description\",\n-      key: \"description\",\n-    },\n-    {\n       title: \"状态\",\n       dataIndex: \"status\",\n       key: \"status\",\n       render: (status: number) => (\n@@ -114,20 +114,26 @@\n     {\n       title: \"创建时间\",\n       dataIndex: \"createdAt\",\n       key: \"createdAt\",\n+      render: (date: string) => dayjs(date).format(\"YYYY-MM-DD HH:mm:ss\"),\n     },\n     {\n+      title: \"更新时间\",\n+      dataIndex: \"updatedAt\",\n+      key: \"updatedAt\",\n+      render: (date: string) => dayjs(date).format(\"YYYY-MM-DD HH:mm:ss\"),\n+    },\n+    {\n       title: \"操作\",\n       key: \"action\",\n-      render: (_: unknown, record: ICategoryType) => (\n+      render: (_, record: ICategoryType) => (\n         <Space size=\"middle\">\n           <Button\n             type=\"link\"\n-            onClick={() => {\n-              setEditingCategoryType(record);\n-              setModalVisible(true);\n-            }}\n+            onClick={() =>\n+              navigate(`/category/category-types/edit/${record.id}`)\n+            }\n           >\n             编辑\n           </Button>\n           <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\n@@ -202,19 +208,14 @@\n         </div>\n \n         <Table\n           columns={columns}\n-          dataSource={categoryTypesData?.list}\n+          dataSource={categoryTypesData?.data.list}\n           rowKey=\"id\"\n-          loading={isLoading}\n           pagination={{\n-            current: currentPage,\n-            pageSize,\n-            total: categoryTypesData?.pagination?.total || 0,\n-            onChange: (page, size) => {\n-              setCurrentPage(page);\n-              setPageSize(size);\n-            },\n+            current: categoryTypesData?.data.pagination.current,\n+            pageSize: categoryTypesData?.data.pagination.pageSize,\n+            total: categoryTypesData?.data.pagination.total,\n           }}\n         />\n       </Card>\n \n"
                },
                {
                    "date": 1746109478700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,35 +43,25 @@\n   const [searchValues, setSearchValues] = useState<\n     Partial<ICategoryTypeQueryParams>\n   >({});\n \n-  const { data: categoryTypesData } = useQuery<\n-    IResponse<ICategoryTypeListResponse>\n-  >({\n+  const { data: categoryTypesResponse } = useQuery({\n     queryKey: [\"categoryTypes\"],\n     queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\n   });\n \n+  const categoryTypes = categoryTypesResponse?.list || [];\n+\n   const handleDelete = useCallback(\n-    (id: number) => {\n-      confirm({\n-        title: \"确认删除\",\n-        icon: <ExclamationCircleOutlined />,\n-        content: \"确定要删除这个分类类型吗？\",\n-        okText: \"确定\",\n-        okType: \"danger\",\n-        cancelText: \"取消\",\n-        onOk: async () => {\n-          try {\n-            await deleteCategoryType(id);\n-            message.success(\"删除成功\");\n-            queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n-          } catch (err) {\n-            message.error(\"删除失败\");\n-            console.error(err);\n-          }\n-        },\n-      });\n+    async (id: number) => {\n+      try {\n+        await deleteCategoryType(id);\n+        message.success(\"删除成功\");\n+        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+      } catch (err) {\n+        message.error(\"删除失败\");\n+        console.error(err);\n+      }\n     },\n     [queryClient]\n   );\n \n@@ -88,21 +78,25 @@\n     },\n     [queryClient]\n   );\n \n-  const columns: ColumnsType<ICategoryType> = [\n+  const columns = [\n     {\n       title: \"ID\",\n       dataIndex: \"id\",\n       key: \"id\",\n-      width: 80,\n     },\n     {\n       title: \"类型名称\",\n       dataIndex: \"name\",\n       key: \"name\",\n     },\n     {\n+      title: \"类型编码\",\n+      dataIndex: \"code\",\n+      key: \"code\",\n+    },\n+    {\n       title: \"状态\",\n       dataIndex: \"status\",\n       key: \"status\",\n       render: (status: number) => (\n@@ -114,33 +108,45 @@\n     {\n       title: \"创建时间\",\n       dataIndex: \"createdAt\",\n       key: \"createdAt\",\n-      render: (date: string) => dayjs(date).format(\"YYYY-MM-DD HH:mm:ss\"),\n+      render: (createdAt: string) =>\n+        dayjs(createdAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n     },\n     {\n       title: \"更新时间\",\n       dataIndex: \"updatedAt\",\n       key: \"updatedAt\",\n-      render: (date: string) => dayjs(date).format(\"YYYY-MM-DD HH:mm:ss\"),\n+      render: (updatedAt: string) =>\n+        dayjs(updatedAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n     },\n     {\n       title: \"操作\",\n       key: \"action\",\n-      render: (_, record: ICategoryType) => (\n-        <Space size=\"middle\">\n+      render: (_: unknown, record: ICategoryType) => (\n+        <Space>\n           <Button\n             type=\"link\"\n             onClick={() =>\n-              navigate(`/category/category-types/edit/${record.id}`)\n+              navigate(`/category/category-types/${record.id}/edit`)\n             }\n           >\n             编辑\n           </Button>\n           <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\n             {record.status === 1 ? \"禁用\" : \"启用\"}\n           </Button>\n-          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\n+          <Button\n+            type=\"link\"\n+            danger\n+            onClick={() => {\n+              confirm({\n+                title: \"确认删除\",\n+                content: \"确定要删除该分类类型吗？\",\n+                onOk: () => handleDelete(record.id),\n+              });\n+            }}\n+          >\n             删除\n           </Button>\n         </Space>\n       ),\n@@ -208,14 +214,14 @@\n         </div>\n \n         <Table\n           columns={columns}\n-          dataSource={categoryTypesData?.data.list}\n+          dataSource={categoryTypes}\n           rowKey=\"id\"\n           pagination={{\n-            current: categoryTypesData?.data.pagination.current,\n-            pageSize: categoryTypesData?.data.pagination.pageSize,\n-            total: categoryTypesData?.data.pagination.total,\n+            current: categoryTypesResponse?.pagination.current,\n+            pageSize: categoryTypesResponse?.pagination.pageSize,\n+            total: categoryTypesResponse?.pagination.total,\n           }}\n         />\n       </Card>\n \n"
                },
                {
                    "date": 1746109522509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,19 @@\n-import {\n-  Button,\n-  Card,\n-  Form,\n-  Input,\n-  Modal,\n-  Select,\n-  Space,\n-  Table,\n-  Tag,\n-  message,\n-} from \"antd\";\n-import type {\n-  ICategoryType,\n-  ICategoryTypeListResponse,\n-  ICategoryTypeQueryParams,\n-} from \"@/types/api/category-type\";\n-import {\n-  deleteCategoryType,\n-  getCategoryTypes,\n-  toggleCategoryTypeStatus,\n-} from \"@/api/modules/category-type\";\n-import { useCallback, useState } from \"react\";\n-import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n+import { Button, Card, Modal, Space, Table, Tag, message } from 'antd';\n+import { deleteCategoryType, getCategoryTypes, toggleCategoryTypeStatus } from '@/api/modules/category-type';\n+import { useQuery, useQueryClient } from '@tanstack/react-query';\n \n-import CategoryTypeForm from \"./components/CategoryTypeForm\";\n-import { ExclamationCircleOutlined } from \"@ant-design/icons\";\n-import dayjs from \"dayjs\";\n-import styles from \"./style.module.less\";\n-import { useNavigate } from \"react-router-dom\";\n+import type { ICategoryType } from '@/types/api/category-type';\n+import dayjs from 'dayjs';\n+import { useCallback } from 'react';\n+import { useNavigate } from 'react-router-dom';\n \n-const { confirm } = Modal;\n-\n const CategoryTypes = () => {\n   const navigate = useNavigate();\n   const queryClient = useQueryClient();\n-  const [form] = Form.useForm<ICategoryTypeQueryParams>();\n-  const [modalVisible, setModalVisible] = useState(false);\n-  const [editingCategoryType, setEditingCategoryType] =\n-    useState<ICategoryType | null>(null);\n-  const [currentPage, setCurrentPage] = useState(1);\n-  const [pageSize, setPageSize] = useState(10);\n-  const [searchValues, setSearchValues] = useState<\n-    Partial<ICategoryTypeQueryParams>\n-  >({});\n \n   const { data: categoryTypesResponse } = useQuery({\n-    queryKey: [\"categoryTypes\"],\n+    queryKey: ['categoryTypes'],\n     queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\n   });\n \n   const categoryTypes = categoryTypesResponse?.list || [];\n@@ -54,12 +21,12 @@\n   const handleDelete = useCallback(\n     async (id: number) => {\n       try {\n         await deleteCategoryType(id);\n-        message.success(\"删除成功\");\n-        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+        message.success('删除成功');\n+        queryClient.invalidateQueries({ queryKey: ['categoryTypes'] });\n       } catch (err) {\n-        message.error(\"删除失败\");\n+        message.error('删除失败');\n         console.error(err);\n       }\n     },\n     [queryClient]\n@@ -68,81 +35,80 @@\n   const handleToggleStatus = useCallback(\n     async (id: number) => {\n       try {\n         await toggleCategoryTypeStatus(id);\n-        message.success(\"状态更新成功\");\n-        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+        message.success('状态更新成功');\n+        queryClient.invalidateQueries({ queryKey: ['categoryTypes'] });\n       } catch (err) {\n-        message.error(\"状态更新失败\");\n+        message.error('状态更新失败');\n         console.error(err);\n       }\n     },\n     [queryClient]\n   );\n \n   const columns = [\n     {\n-      title: \"ID\",\n-      dataIndex: \"id\",\n-      key: \"id\",\n+      title: 'ID',\n+      dataIndex: 'id',\n+      key: 'id',\n     },\n     {\n-      title: \"类型名称\",\n-      dataIndex: \"name\",\n-      key: \"name\",\n+      title: '类型名称',\n+      dataIndex: 'name',\n+      key: 'name',\n     },\n     {\n-      title: \"类型编码\",\n-      dataIndex: \"code\",\n-      key: \"code\",\n+      title: '类型编码',\n+      dataIndex: 'code',\n+      key: 'code',\n     },\n     {\n-      title: \"状态\",\n-      dataIndex: \"status\",\n-      key: \"status\",\n+      title: '状态',\n+      dataIndex: 'status',\n+      key: 'status',\n       render: (status: number) => (\n-        <Tag color={status === 1 ? \"success\" : \"error\"}>\n-          {status === 1 ? \"启用\" : \"禁用\"}\n+        <Tag color={status === 1 ? 'success' : 'error'}>\n+          {status === 1 ? '启用' : '禁用'}\n         </Tag>\n       ),\n     },\n     {\n-      title: \"创建时间\",\n-      dataIndex: \"createdAt\",\n-      key: \"createdAt\",\n-      render: (createdAt: string) =>\n-        dayjs(createdAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n+      title: '创建时间',\n+      dataIndex: 'createdAt',\n+      key: 'createdAt',\n+      render: (createdAt: string) => dayjs(createdAt).format('YYYY-MM-DD HH:mm:ss'),\n     },\n     {\n-      title: \"更新时间\",\n-      dataIndex: \"updatedAt\",\n-      key: \"updatedAt\",\n-      render: (updatedAt: string) =>\n-        dayjs(updatedAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n+      title: '更新时间',\n+      dataIndex: 'updatedAt',\n+      key: 'updatedAt',\n+      render: (updatedAt: string) => dayjs(updatedAt).format('YYYY-MM-DD HH:mm:ss'),\n     },\n     {\n-      title: \"操作\",\n-      key: \"action\",\n+      title: '操作',\n+      key: 'action',\n       render: (_: unknown, record: ICategoryType) => (\n         <Space>\n           <Button\n             type=\"link\"\n-            onClick={() =>\n-              navigate(`/category/category-types/${record.id}/edit`)\n-            }\n+            onClick={() => navigate(`/category/category-types/${record.id}/edit`)}\n           >\n             编辑\n           </Button>\n-          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\n-            {record.status === 1 ? \"禁用\" : \"启用\"}\n+          <Button\n+            type=\"link\"\n+            onClick={() => handleToggleStatus(record.id)}\n+          >\n+            {record.status === 1 ? '禁用' : '启用'}\n           </Button>\n           <Button\n             type=\"link\"\n             danger\n             onClick={() => {\n-              confirm({\n-                title: \"确认删除\",\n-                content: \"确定要删除该分类类型吗？\",\n+              Modal.confirm({\n+                title: '确认删除',\n+                content: '确定要删除该分类类型吗？',\n                 onOk: () => handleDelete(record.id),\n               });\n             }}\n           >\n@@ -152,94 +118,24 @@\n       ),\n     },\n   ];\n \n-  // 处理搜索\n-  const handleSearch = (values: Partial<ICategoryTypeQueryParams>) => {\n-    setCurrentPage(1);\n-    setSearchValues(values);\n-  };\n-\n-  // 处理重置\n-  const handleReset = () => {\n-    form.resetFields();\n-    setCurrentPage(1);\n-    setSearchValues({});\n-  };\n-\n   return (\n-    <div className={styles.container}>\n-      <Card>\n-        <Form<ICategoryTypeQueryParams>\n-          form={form}\n-          layout=\"inline\"\n-          className={styles.searchForm}\n-          onFinish={handleSearch}\n-        >\n-          <Form.Item name=\"name\" label=\"分类类型名称\">\n-            <Input placeholder=\"请输入分类类型名称\" allowClear />\n-          </Form.Item>\n-          <Form.Item name=\"code\" label=\"分类类型编码\">\n-            <Input placeholder=\"请输入分类类型编码\" allowClear />\n-          </Form.Item>\n-          <Form.Item name=\"status\" label=\"状态\">\n-            <Select\n-              placeholder=\"请选择状态\"\n-              allowClear\n-              options={[\n-                { label: \"启用\", value: 1 },\n-                { label: \"禁用\", value: 0 },\n-              ]}\n-            />\n-          </Form.Item>\n-          <Form.Item>\n-            <Space>\n-              <Button type=\"primary\" htmlType=\"submit\">\n-                搜索\n-              </Button>\n-              <Button onClick={handleReset}>重置</Button>\n-            </Space>\n-          </Form.Item>\n-        </Form>\n-\n-        <div className={styles.tableHeader}>\n-          <Button\n-            type=\"primary\"\n-            onClick={() => {\n-              setEditingCategoryType(null);\n-              setModalVisible(true);\n-            }}\n-          >\n-            新增分类类型\n-          </Button>\n-        </div>\n-\n-        <Table\n-          columns={columns}\n-          dataSource={categoryTypes}\n-          rowKey=\"id\"\n-          pagination={{\n-            current: categoryTypesResponse?.pagination.current,\n-            pageSize: categoryTypesResponse?.pagination.pageSize,\n-            total: categoryTypesResponse?.pagination.total,\n-          }}\n-        />\n-      </Card>\n-\n-      <CategoryTypeForm\n-        visible={modalVisible}\n-        editingCategoryType={editingCategoryType}\n-        onCancel={() => {\n-          setModalVisible(false);\n-          setEditingCategoryType(null);\n-        }}\n-        onSuccess={() => {\n-          setModalVisible(false);\n-          setEditingCategoryType(null);\n-          queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n-        }}\n+    <Card\n+      title=\"分类类型管理\"\n+      extra={\n+        <Button type=\"primary\" onClick={() => navigate('/category/category-types/new')}>\n+          新增分类类型\n+        </Button>\n+      }\n+    >\n+      <Table\n+        columns={columns}\n+        dataSource={categoryTypes}\n+        rowKey=\"id\"\n+        pagination={false}\n       />\n-    </div>\n+    </Card>\n   );\n };\n \n export default CategoryTypes;\n"
                },
                {
                    "date": 1746109573666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,130 +1,138 @@\n-import { Button, Card, Modal, Space, Table, Tag, message } from 'antd';\n-import { deleteCategoryType, getCategoryTypes, toggleCategoryTypeStatus } from '@/api/modules/category-type';\n-import { useQuery, useQueryClient } from '@tanstack/react-query';\n-\r\n-import type { ICategoryType } from '@/types/api/category-type';\n-import dayjs from 'dayjs';\n-import { useCallback } from 'react';\n-import { useNavigate } from 'react-router-dom';\n-\r\n-const CategoryTypes = () => {\r\n+import { Button, Card, Modal, Space, Table, Tag, message } from \"antd\";\n+import {\n+  deleteCategoryType,\n+  getCategoryTypes,\n+  toggleCategoryTypeStatus,\n+} from \"@/api/modules/category-type\";\n+import { useQuery, useQueryClient } from \"@tanstack/react-query\";\n+\n+import type { ICategoryType } from \"@/types/api/category-type\";\n+import dayjs from \"dayjs\";\n+import { useCallback } from \"react\";\n+import { useNavigate } from \"react-router-dom\";\n+\n+const CategoryTypes = () => {\n   const navigate = useNavigate();\n-  const queryClient = useQueryClient();\r\n-\r\n+  const queryClient = useQueryClient();\n+\n   const { data: categoryTypesResponse } = useQuery({\n-    queryKey: ['categoryTypes'],\n+    queryKey: [\"categoryTypes\"],\n     queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\n-  });\r\n-\r\n+  });\n+\n   const categoryTypes = categoryTypesResponse?.list || [];\n \n   const handleDelete = useCallback(\n     async (id: number) => {\n       try {\n         await deleteCategoryType(id);\n-        message.success('删除成功');\n-        queryClient.invalidateQueries({ queryKey: ['categoryTypes'] });\n+        message.success(\"删除成功\");\n+        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n       } catch (err) {\n-        message.error('删除失败');\n+        message.error(\"删除失败\");\n         console.error(err);\n       }\n-    },\r\n+    },\n     [queryClient]\n   );\n-\r\n+\n   const handleToggleStatus = useCallback(\n     async (id: number) => {\n       try {\n         await toggleCategoryTypeStatus(id);\n-        message.success('状态更新成功');\n-        queryClient.invalidateQueries({ queryKey: ['categoryTypes'] });\n+        message.success(\"状态更新成功\");\n+        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n       } catch (err) {\n-        message.error('状态更新失败');\n+        message.error(\"状态更新失败\");\n         console.error(err);\n       }\n-    },\r\n+    },\n     [queryClient]\n   );\n-\r\n+\n   const columns = [\n-    {\r\n-      title: 'ID',\n-      dataIndex: 'id',\n-      key: 'id',\n+    {\n+      title: \"ID\",\n+      dataIndex: \"id\",\n+      key: \"id\",\n     },\n     {\n-      title: '类型名称',\n-      dataIndex: 'name',\n-      key: 'name',\n-    },\r\n-    {\r\n-      title: '类型编码',\n-      dataIndex: 'code',\n-      key: 'code',\n+      title: \"类型名称\",\n+      dataIndex: \"name\",\n+      key: \"name\",\n     },\n     {\n-      title: '状态',\n-      dataIndex: 'status',\n-      key: 'status',\n-      render: (status: number) => (\r\n-        <Tag color={status === 1 ? 'success' : 'error'}>\n-          {status === 1 ? '启用' : '禁用'}\n-        </Tag>\r\n-      ),\r\n-    },\r\n-    {\r\n-      title: '创建时间',\n-      dataIndex: 'createdAt',\n-      key: 'createdAt',\n-      render: (createdAt: string) => dayjs(createdAt).format('YYYY-MM-DD HH:mm:ss'),\n-    },\r\n-    {\r\n-      title: '更新时间',\n-      dataIndex: 'updatedAt',\n-      key: 'updatedAt',\n-      render: (updatedAt: string) => dayjs(updatedAt).format('YYYY-MM-DD HH:mm:ss'),\n+      title: \"类型编码\",\n+      dataIndex: \"code\",\n+      key: \"code\",\n     },\n     {\n-      title: '操作',\n-      key: 'action',\n+      title: \"状态\",\n+      dataIndex: \"status\",\n+      key: \"status\",\n+      render: (status: number) => (\n+        <Tag color={status === 1 ? \"success\" : \"error\"}>\n+          {status === 1 ? \"启用\" : \"禁用\"}\n+        </Tag>\n+      ),\n+    },\n+    {\n+      title: \"创建时间\",\n+      dataIndex: \"createdAt\",\n+      key: \"createdAt\",\n+      render: (createdAt: string) =>\n+        dayjs(createdAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n+    },\n+    {\n+      title: \"更新时间\",\n+      dataIndex: \"updatedAt\",\n+      key: \"updatedAt\",\n+      render: (updatedAt: string) =>\n+        dayjs(updatedAt).format(\"YYYY-MM-DD HH:mm:ss\"),\n+    },\n+    {\n+      title: \"操作\",\n+      key: \"action\",\n       render: (_: unknown, record: ICategoryType) => (\n         <Space>\n-          <Button\r\n-            type=\"link\"\r\n-            onClick={() => navigate(`/category/category-types/${record.id}/edit`)}\n-          >\r\n-            编辑\r\n-          </Button>\r\n           <Button\n             type=\"link\"\n-            onClick={() => handleToggleStatus(record.id)}\n+            onClick={() =>\n+              navigate(`/category/category-types/${record.id}/edit`)\n+            }\n           >\n-            {record.status === 1 ? '禁用' : '启用'}\n-          </Button>\r\n+            编辑\n+          </Button>\n+          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\n+            {record.status === 1 ? \"禁用\" : \"启用\"}\n+          </Button>\n           <Button\n             type=\"link\"\n             danger\n             onClick={() => {\n               Modal.confirm({\n-                title: '确认删除',\n-                content: '确定要删除该分类类型吗？',\n+                title: \"确认删除\",\n+                content: \"确定要删除该分类类型吗？\",\n                 onOk: () => handleDelete(record.id),\n               });\n             }}\n           >\n-            删除\r\n-          </Button>\r\n-        </Space>\r\n-      ),\r\n-    },\r\n-  ];\r\n-\r\n-  return (\r\n+            删除\n+          </Button>\n+        </Space>\n+      ),\n+    },\n+  ];\n+\n+  return (\n     <Card\n       title=\"分类类型管理\"\n       extra={\n-        <Button type=\"primary\" onClick={() => navigate('/category/category-types/new')}>\n+        <Button\n+          type=\"primary\"\n+          onClick={() => navigate(\"/category/category-types/new\")}\n+        >\n           新增分类类型\n         </Button>\n       }\n     >\n@@ -132,10 +140,10 @@\n         columns={columns}\n         dataSource={categoryTypes}\n         rowKey=\"id\"\n         pagination={false}\n-      />\r\n+      />\n     </Card>\n-  );\r\n-};\r\n-\r\n-export default CategoryTypes;\r\n+  );\n+};\n+\n+export default CategoryTypes;\n"
                },
                {
                    "date": 1746111088512,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,22 +35,10 @@\n     },\n     [queryClient]\n   );\n \n-  const handleToggleStatus = useCallback(\n-    async (id: number) => {\n-      try {\n-        await toggleCategoryTypeStatus(id);\n-        message.success(\"状态更新成功\");\n-        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n-      } catch (err) {\n-        message.error(\"状态更新失败\");\n-        console.error(err);\n-      }\n-    },\n-    [queryClient]\n-  );\n \n+\n   const columns = [\n     {\n       title: \"ID\",\n       dataIndex: \"id\",\n"
                },
                {
                    "date": 1746111098573,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,19 +51,10 @@\n       title: \"类型编码\",\n       dataIndex: \"code\",\n       key: \"code\",\n     },\n+\n     {\n-      title: \"状态\",\n-      dataIndex: \"status\",\n-      key: \"status\",\n-      render: (status: number) => (\n-        <Tag color={status === 1 ? \"success\" : \"error\"}>\n-          {status === 1 ? \"启用\" : \"禁用\"}\n-        </Tag>\n-      ),\n-    },\n-    {\n       title: \"创建时间\",\n       dataIndex: \"createdAt\",\n       key: \"createdAt\",\n       render: (createdAt: string) =>\n"
                },
                {
                    "date": 1746111108344,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,11 +79,8 @@\n             }\n           >\n             编辑\n           </Button>\n-          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\n-            {record.status === 1 ? \"禁用\" : \"启用\"}\n-          </Button>\n           <Button\n             type=\"link\"\n             danger\n             onClick={() => {\n"
                },
                {
                    "date": 1746111132743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { Button, Card, Modal, Space, Table, Tag, message } from \"antd\";\n import {\n   deleteCategoryType,\n   getCategoryTypes,\n-  toggleCategoryTypeStatus,\n } from \"@/api/modules/category-type\";\n import { useQuery, useQueryClient } from \"@tanstack/react-query\";\n \n import type { ICategoryType } from \"@/types/api/category-type\";\n"
                },
                {
                    "date": 1746111149857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Button, Card, Modal, Space, Table, Tag, message } from \"antd\";\n+import { Button, Card, Modal, Space, Table, message } from \"antd\";\n import {\n   deleteCategoryType,\n   getCategoryTypes,\n } from \"@/api/modules/category-type\";\n"
                },
                {
                    "date": 1746137262716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,41 +1,61 @@\n-import { Button, Card, Modal, Space, Table, message } from \"antd\";\n+import { Button, Card, Form, Input, Modal, Space, Table, message } from \"antd\";\n+import type { ICategoryType, ICategoryTypeQueryParams } from \"@/types/api/category-type\";\n import {\n   deleteCategoryType,\n   getCategoryTypes,\n } from \"@/api/modules/category-type\";\n-import { useQuery, useQueryClient } from \"@tanstack/react-query\";\n+import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\n \n-import type { ICategoryType } from \"@/types/api/category-type\";\n+import CategoryTypeForm from \"./components/CategoryTypeForm\";\n+import type { ICategoryTypeListResponse } from \"@/types/api/category-type\";\n import dayjs from \"dayjs\";\n-import { useCallback } from \"react\";\n-import { useNavigate } from \"react-router-dom\";\n+import styles from \"./style.module.less\";\n+import { useState } from \"react\";\n \n+const { confirm } = Modal;\n+\n const CategoryTypes = () => {\n-  const navigate = useNavigate();\n   const queryClient = useQueryClient();\n+  const [form] = Form.useForm<ICategoryTypeQueryParams>();\n+  const [modalVisible, setModalVisible] = useState(false);\n+  const [editingCategoryType, setEditingCategoryType] = useState<ICategoryType | null>(null);\n+  const [currentPage, setCurrentPage] = useState(1);\n+  const [pageSize, setPageSize] = useState(10);\n+  const [searchValues, setSearchValues] = useState<Partial<ICategoryTypeQueryParams>>({});\n \n-  const { data: categoryTypesResponse } = useQuery({\n-    queryKey: [\"categoryTypes\"],\n-    queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\n+  // 获取分类类型列表\n+  const { data: categoryTypesData, isLoading } = useQuery<ICategoryTypeListResponse>({\n+    queryKey: [\"categoryTypes\", currentPage, pageSize, searchValues],\n+    queryFn: () =>\n+      getCategoryTypes({\n+        page: currentPage,\n+        pageSize,\n+        ...searchValues,\n+      }),\n   });\n \n-  const categoryTypes = categoryTypesResponse?.list || [];\n-\n-  const handleDelete = useCallback(\n-    async (id: number) => {\n-      try {\n-        await deleteCategoryType(id);\n-        message.success(\"删除成功\");\n-        queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n-      } catch (err) {\n-        message.error(\"删除失败\");\n-        console.error(err);\n-      }\n+  // 删除分类类型\n+  const deleteMutation = useMutation({\n+    mutationFn: deleteCategoryType,\n+    onSuccess: () => {\n+      message.success(\"删除成功\");\n+      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n     },\n-    [queryClient]\n-  );\n+  });\n \n+  // 处理删除\n+  const handleDelete = (id: number) => {\n+    confirm({\n+      title: \"确认删除\",\n+      content: \"确定要删除这个分类类型吗？此操作不可恢复。\",\n+      okText: \"确认\",\n+      cancelText: \"取消\",\n+      onOk: () => deleteMutation.mutate(id),\n+    });\n+  };\n+\n+  // 表格列配置\n   const columns = [\n     {\n       title: \"ID\",\n       dataIndex: \"id\",\n@@ -50,9 +70,8 @@\n       title: \"类型编码\",\n       dataIndex: \"code\",\n       key: \"code\",\n     },\n-\n     {\n       title: \"创建时间\",\n       dataIndex: \"createdAt\",\n       key: \"createdAt\",\n@@ -69,54 +88,107 @@\n     {\n       title: \"操作\",\n       key: \"action\",\n       render: (_: unknown, record: ICategoryType) => (\n-        <Space>\n+        <Space size=\"middle\">\n           <Button\n             type=\"link\"\n-            onClick={() =>\n-              navigate(`/category/category-types/${record.id}/edit`)\n-            }\n+            onClick={() => {\n+              setEditingCategoryType(record);\n+              setModalVisible(true);\n+            }}\n           >\n             编辑\n           </Button>\n-          <Button\n-            type=\"link\"\n-            danger\n-            onClick={() => {\n-              Modal.confirm({\n-                title: \"确认删除\",\n-                content: \"确定要删除该分类类型吗？\",\n-                onOk: () => handleDelete(record.id),\n-              });\n-            }}\n-          >\n+          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\n             删除\n           </Button>\n         </Space>\n       ),\n     },\n   ];\n \n+  // 处理搜索\n+  const handleSearch = (values: Partial<ICategoryTypeQueryParams>) => {\n+    setSearchValues(values);\n+    setCurrentPage(1);\n+  };\n+\n+  // 处理重置\n+  const handleReset = () => {\n+    form.resetFields();\n+    setSearchValues({});\n+    setCurrentPage(1);\n+  };\n+\n   return (\n-    <Card\n-      title=\"分类类型管理\"\n-      extra={\n-        <Button\n-          type=\"primary\"\n-          onClick={() => navigate(\"/category/category-types/new\")}\n+    <div className={styles.container}>\n+      <Card>\n+        <Form<ICategoryTypeQueryParams>\n+          form={form}\n+          layout=\"inline\"\n+          className={styles.searchForm}\n+          onFinish={handleSearch}\n         >\n-          新增分类类型\n-        </Button>\n-      }\n-    >\n-      <Table\n-        columns={columns}\n-        dataSource={categoryTypes}\n-        rowKey=\"id\"\n-        pagination={false}\n+          <Form.Item name=\"name\" label=\"类型名称\">\n+            <Input placeholder=\"请输入类型名称\" allowClear />\n+          </Form.Item>\n+          <Form.Item name=\"code\" label=\"类型编码\">\n+            <Input placeholder=\"请输入类型编码\" allowClear />\n+          </Form.Item>\n+          <Form.Item>\n+            <Space>\n+              <Button type=\"primary\" htmlType=\"submit\">\n+                搜索\n+              </Button>\n+              <Button onClick={handleReset}>重置</Button>\n+            </Space>\n+          </Form.Item>\n+        </Form>\n+\n+        <div className={styles.tableHeader}>\n+          <Button\n+            type=\"primary\"\n+            onClick={() => {\n+              setEditingCategoryType(null);\n+              setModalVisible(true);\n+            }}\n+          >\n+            新增分类类型\n+          </Button>\n+        </div>\n+\n+        <Table\n+          columns={columns}\n+          dataSource={categoryTypesData?.list}\n+          rowKey=\"id\"\n+          loading={isLoading}\n+          pagination={{\n+            current: currentPage,\n+            pageSize,\n+            total: categoryTypesData?.pagination?.total || 0,\n+            onChange: (page, size) => {\n+              setCurrentPage(page);\n+              setPageSize(size);\n+            },\n+          }}\n+        />\n+      </Card>\n+\n+      <CategoryTypeForm\n+        visible={modalVisible}\n+        editingCategoryType={editingCategoryType}\n+        onCancel={() => {\n+          setModalVisible(false);\n+          setEditingCategoryType(null);\n+        }}\n+        onSuccess={() => {\n+          setModalVisible(false);\n+          setEditingCategoryType(null);\n+          queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\n+        }}\n       />\n-    </Card>\n+    </div>\n   );\n };\n \n export default CategoryTypes;\n"
                },
                {
                    "date": 1746140183928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { Button, Card, Form, Input, Modal, Space, Table, message } from \"antd\";\n+import { Button, Card, Form, Input, Modal, Select, Space, Table, message } from \"antd\";\n import type {\n   ICategoryType,\n   ICategoryTypeQueryParams,\n } from \"@/types/api/category-type\";\n@@ -78,8 +78,19 @@\n       dataIndex: \"code\",\n       key: \"code\",\n     },\n     {\n+      title: \"描述\",\n+      dataIndex: \"description\",\n+      key: \"description\",\n+    },\n+    {\n+      title: \"状态\",\n+      dataIndex: \"status\",\n+      key: \"status\",\n+      render: (status: boolean) => (status ? \"启用\" : \"禁用\"),\n+    },\n+    {\n       title: \"创建时间\",\n       dataIndex: \"createdAt\",\n       key: \"createdAt\",\n       render: (createdAt: string) =>\n@@ -115,9 +126,17 @@\n   ];\n \n   // 处理搜索\n   const handleSearch = (values: Partial<ICategoryTypeQueryParams>) => {\n-    setSearchValues(values);\n+    // 移除空值\n+    const searchParams = Object.entries(values).reduce((acc, [key, value]) => {\n+      if (value !== undefined && value !== null && value !== \"\") {\n+        return { ...acc, [key]: value };\n+      }\n+      return acc;\n+    }, {});\n+\n+    setSearchValues(searchParams);\n     setCurrentPage(1);\n   };\n \n   // 处理重置\n@@ -135,14 +154,30 @@\n           layout=\"inline\"\n           className={styles.searchForm}\n           onFinish={handleSearch}\n         >\n+          <Form.Item name=\"search\" label=\"全局搜索\">\n+            <Input placeholder=\"搜索全部字段\" allowClear />\n+          </Form.Item>\n           <Form.Item name=\"name\" label=\"类型名称\">\n             <Input placeholder=\"请输入类型名称\" allowClear />\n           </Form.Item>\n           <Form.Item name=\"code\" label=\"类型编码\">\n             <Input placeholder=\"请输入类型编码\" allowClear />\n           </Form.Item>\n+          <Form.Item name=\"description\" label=\"描述\">\n+            <Input placeholder=\"请输入描述\" allowClear />\n+          </Form.Item>\n+          <Form.Item name=\"status\" label=\"状态\">\n+            <Select\n+              placeholder=\"请选择状态\"\n+              allowClear\n+              options={[\n+                { label: \"启用\", value: true },\n+                { label: \"禁用\", value: false },\n+              ]}\n+            />\n+          </Form.Item>\n           <Form.Item>\n             <Space>\n               <Button type=\"primary\" htmlType=\"submit\">\n                 搜索\n"
                }
            ],
            "date": 1746097853313,
            "name": "Commit-0",
            "content": "import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  message,\r\n} from \"antd\";\r\nimport type {\r\n  ICategoryType,\r\n  ICategoryTypeQueryParams,\r\n} from \"@/types/api/category-type\";\r\nimport {\r\n  deleteCategoryType,\r\n  getCategoryTypes,\r\n  toggleCategoryTypeStatus,\r\n} from \"@/api/modules/category-type\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nimport CategoryTypeForm from \"./components/CategoryTypeForm\";\r\nimport styles from \"./style.module.less\";\r\nimport { useState } from \"react\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst CategoryTypes = () => {\r\n  const queryClient = useQueryClient();\r\n  const [form] = Form.useForm<ICategoryTypeQueryParams>();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingCategoryType, setEditingCategoryType] =\r\n    useState<ICategoryType | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [searchValues, setSearchValues] = useState<\r\n    Partial<ICategoryTypeQueryParams>\r\n  >({});\r\n\r\n  // 获取分类类型列表\r\n  const { data: categoryTypesData, isLoading } = useQuery({\r\n    queryKey: [\"categoryTypes\", currentPage, pageSize, searchValues],\r\n    queryFn: () =>\r\n      getCategoryTypes({\r\n        page: currentPage,\r\n        pageSize,\r\n        ...searchValues,\r\n      }),\r\n  });\r\n\r\n  // 删除分类类型\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteCategoryType,\r\n    onSuccess: () => {\r\n      message.success(\"删除成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n    },\r\n  });\r\n\r\n  // 切换分类类型状态\r\n  const toggleStatusMutation = useMutation({\r\n    mutationFn: toggleCategoryTypeStatus,\r\n    onSuccess: () => {\r\n      message.success(\"状态更新成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n    },\r\n  });\r\n\r\n  // 处理删除分类类型\r\n  const handleDelete = (id: number) => {\r\n    confirm({\r\n      title: \"确认删除\",\r\n      content: \"确定要删除这个分类类型吗？此操作不可恢复。\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => deleteMutation.mutate(id),\r\n    });\r\n  };\r\n\r\n  // 处理切换分类类型状态\r\n  const handleToggleStatus = (id: number) => {\r\n    toggleStatusMutation.mutate(id);\r\n  };\r\n\r\n  // 表格列配置\r\n  const columns = [\r\n    {\r\n      title: \"分类类型名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"分类类型编码\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: number) => (\r\n        <Tag color={status === 1 ? \"success\" : \"error\"}>\r\n          {status === 1 ? \"启用\" : \"禁用\"}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_: unknown, record: ICategoryType) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setEditingCategoryType(record);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n            {record.status === 1 ? \"禁用\" : \"启用\"}\r\n          </Button>\r\n          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 处理搜索\r\n  const handleSearch = (values: Partial<ICategoryTypeQueryParams>) => {\r\n    setCurrentPage(1);\r\n    setSearchValues(values);\r\n  };\r\n\r\n  // 处理重置\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setCurrentPage(1);\r\n    setSearchValues({});\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card>\r\n        <Form<ICategoryTypeQueryParams>\r\n          form={form}\r\n          layout=\"inline\"\r\n          className={styles.searchForm}\r\n          onFinish={handleSearch}\r\n        >\r\n          <Form.Item name=\"name\" label=\"分类类型名称\">\r\n            <Input placeholder=\"请输入分类类型名称\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"code\" label=\"分类类型编码\">\r\n            <Input placeholder=\"请输入分类类型编码\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"status\" label=\"状态\">\r\n            <Select\r\n              placeholder=\"请选择状态\"\r\n              allowClear\r\n              options={[\r\n                { label: \"启用\", value: 1 },\r\n                { label: \"禁用\", value: 0 },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                搜索\r\n              </Button>\r\n              <Button onClick={handleReset}>重置</Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <div className={styles.tableHeader}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setEditingCategoryType(null);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            新增分类类型\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={categoryTypesData?.data.list}\r\n          rowKey=\"id\"\r\n          loading={isLoading}\r\n          pagination={{\r\n            current: currentPage,\r\n            pageSize,\r\n            total: categoryTypesData?.data.pagination?.total || 0,\r\n            onChange: (page, size) => {\r\n              setCurrentPage(page);\r\n              setPageSize(size);\r\n            },\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <CategoryTypeForm\r\n        visible={modalVisible}\r\n        editingCategoryType={editingCategoryType}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n          setEditingCategoryType(null);\r\n        }}\r\n        onSuccess={() => {\r\n          setModalVisible(false);\r\n          setEditingCategoryType(null);\r\n          queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTypes;\r\n"
        }
    ]
}