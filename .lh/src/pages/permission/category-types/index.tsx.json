{
    "sourceFile": "src/pages/permission/category-types/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746088120452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088927406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -228,5 +228,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default CategoryTypes; \n\\ No newline at end of file\n+export default CategoryTypes;\r\n"
                }
            ],
            "date": 1746088120452,
            "name": "Commit-0",
            "content": "import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  message,\r\n} from \"antd\";\r\nimport {\r\n  deleteCategoryType,\r\n  getCategoryTypes,\r\n  toggleCategoryTypeStatus,\r\n} from \"@/api/modules/category-type\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nimport CategoryTypeForm from \"./components/CategoryTypeForm\";\r\nimport type { ICategoryType } from \"@/types/api/category-type\";\r\nimport styles from \"./style.module.less\";\r\nimport { useState } from \"react\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst CategoryTypes = () => {\r\n  const queryClient = useQueryClient();\r\n  const [form] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingCategoryType, setEditingCategoryType] =\r\n    useState<ICategoryType | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  // 获取分类类型列表\r\n  const { data: categoryTypesData, isLoading } = useQuery({\r\n    queryKey: [\"categoryTypes\", currentPage, pageSize, form.getFieldsValue()],\r\n    queryFn: () =>\r\n      getCategoryTypes({\r\n        page: currentPage,\r\n        pageSize,\r\n        ...form.getFieldsValue(),\r\n      }),\r\n  });\r\n\r\n  // 删除分类类型\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteCategoryType,\r\n    onSuccess: () => {\r\n      message.success(\"删除成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n    },\r\n  });\r\n\r\n  // 切换分类类型状态\r\n  const toggleStatusMutation = useMutation({\r\n    mutationFn: toggleCategoryTypeStatus,\r\n    onSuccess: () => {\r\n      message.success(\"状态更新成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n    },\r\n  });\r\n\r\n  // 处理删除分类类型\r\n  const handleDelete = (id: number) => {\r\n    confirm({\r\n      title: \"确认删除\",\r\n      content: \"确定要删除这个分类类型吗？此操作不可恢复。\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => deleteMutation.mutate(id),\r\n    });\r\n  };\r\n\r\n  // 处理切换分类类型状态\r\n  const handleToggleStatus = (id: number) => {\r\n    toggleStatusMutation.mutate(id);\r\n  };\r\n\r\n  // 表格列配置\r\n  const columns = [\r\n    {\r\n      title: \"分类类型名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"分类类型编码\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: boolean) => (\r\n        <Tag color={status ? \"success\" : \"error\"}>\r\n          {status ? \"启用\" : \"禁用\"}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_: unknown, record: ICategoryType) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setEditingCategoryType(record);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n            {record.status ? \"禁用\" : \"启用\"}\r\n          </Button>\r\n          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 处理搜索\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n  };\r\n\r\n  // 处理重置\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card>\r\n        <Form\r\n          form={form}\r\n          layout=\"inline\"\r\n          className={styles.searchForm}\r\n          onFinish={handleSearch}\r\n        >\r\n          <Form.Item name=\"name\" label=\"分类类型名称\">\r\n            <Input placeholder=\"请输入分类类型名称\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"code\" label=\"分类类型编码\">\r\n            <Input placeholder=\"请输入分类类型编码\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"status\" label=\"状态\">\r\n            <Select\r\n              placeholder=\"请选择状态\"\r\n              allowClear\r\n              options={[\r\n                { label: \"启用\", value: true },\r\n                { label: \"禁用\", value: false },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                搜索\r\n              </Button>\r\n              <Button onClick={handleReset}>重置</Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <div className={styles.tableHeader}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setEditingCategoryType(null);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            新增分类类型\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={categoryTypesData?.data.list}\r\n          rowKey=\"id\"\r\n          loading={isLoading}\r\n          pagination={{\r\n            current: currentPage,\r\n            pageSize,\r\n            total: categoryTypesData?.data.total,\r\n            onChange: (page, size) => {\r\n              setCurrentPage(page);\r\n              setPageSize(size);\r\n            },\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <CategoryTypeForm\r\n        visible={modalVisible}\r\n        editingCategoryType={editingCategoryType}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n          setEditingCategoryType(null);\r\n        }}\r\n        onSuccess={() => {\r\n          setModalVisible(false);\r\n          setEditingCategoryType(null);\r\n          queryClient.invalidateQueries({ queryKey: [\"categoryTypes\"] });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryTypes; "
        }
    ]
}