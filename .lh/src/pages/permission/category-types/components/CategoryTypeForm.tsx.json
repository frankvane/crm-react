{
    "sourceFile": "src/pages/permission/category-types/components/CategoryTypeForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746088148741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088927393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,5 +111,5 @@\n     </Modal>\r\n   );\r\n };\r\n \r\n-export default CategoryTypeForm; \n\\ No newline at end of file\n+export default CategoryTypeForm;\r\n"
                }
            ],
            "date": 1746088148741,
            "name": "Commit-0",
            "content": "import { Form, Input, Modal, Switch } from \"antd\";\r\nimport type {\r\n  ICategoryType,\r\n  ICreateCategoryTypeParams,\r\n  IUpdateCategoryTypeParams,\r\n} from \"@/types/api/category-type\";\r\nimport {\r\n  createCategoryType,\r\n  updateCategoryType,\r\n} from \"@/api/modules/category-type\";\r\n\r\nimport { message } from \"antd\";\r\nimport { useEffect } from \"react\";\r\nimport { useMutation } from \"@tanstack/react-query\";\r\n\r\ninterface ICategoryTypeFormProps {\r\n  visible: boolean;\r\n  editingCategoryType: ICategoryType | null;\r\n  onCancel: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst CategoryTypeForm = ({\r\n  visible,\r\n  editingCategoryType,\r\n  onCancel,\r\n  onSuccess,\r\n}: ICategoryTypeFormProps) => {\r\n  const [form] = Form.useForm<ICreateCategoryTypeParams>();\r\n\r\n  // 创建分类类型\r\n  const createMutation = useMutation({\r\n    mutationFn: (data: ICreateCategoryTypeParams) => createCategoryType(data),\r\n    onSuccess: () => {\r\n      message.success(\"创建成功\");\r\n      onSuccess();\r\n    },\r\n  });\r\n\r\n  // 更新分类类型\r\n  const updateMutation = useMutation({\r\n    mutationFn: ({ id, ...data }: IUpdateCategoryTypeParams & { id: number }) =>\r\n      updateCategoryType(id, data),\r\n    onSuccess: () => {\r\n      message.success(\"更新成功\");\r\n      onSuccess();\r\n    },\r\n  });\r\n\r\n  // 监听表单显示状态\r\n  useEffect(() => {\r\n    if (visible) {\r\n      if (editingCategoryType) {\r\n        form.setFieldsValue(editingCategoryType);\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [visible, editingCategoryType, form]);\r\n\r\n  // 处理表单提交\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      if (editingCategoryType) {\r\n        updateMutation.mutate({\r\n          id: editingCategoryType.id,\r\n          ...values,\r\n        });\r\n      } else {\r\n        createMutation.mutate(values);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"表单验证失败:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={editingCategoryType ? \"编辑分类类型\" : \"新增分类类型\"}\r\n      open={visible}\r\n      onCancel={onCancel}\r\n      onOk={handleSubmit}\r\n      confirmLoading={createMutation.isPending || updateMutation.isPending}\r\n    >\r\n      <Form form={form} layout=\"vertical\" initialValues={{ status: true }}>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"分类类型名称\"\r\n          rules={[{ required: true, message: \"请输入分类类型名称\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类类型名称\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"code\"\r\n          label=\"分类类型编码\"\r\n          rules={[{ required: true, message: \"请输入分类类型编码\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类类型编码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"description\" label=\"描述\">\r\n          <Input.TextArea placeholder=\"请输入描述\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"status\" label=\"状态\" valuePropName=\"checked\">\r\n          <Switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CategoryTypeForm; "
        }
    ]
}