{
    "sourceFile": "src/pages/permission/roles/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1746087770597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088927631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -223,5 +223,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Roles;\n\\ No newline at end of file\n+export default Roles;\r\n"
                },
                {
                    "date": 1746097601386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,34 +9,37 @@\n   Table,\r\n   Tag,\r\n   message,\r\n } from \"antd\";\r\n+import type { IRole, IRoleQueryParams } from \"@/types/api/role\";\r\n import { deleteRole, getRoles, toggleRoleStatus } from \"@/api/modules/role\";\r\n import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n \r\n-import type { IRole } from \"@/types/api/role\";\r\n import RoleForm from \"./components/RoleForm\";\r\n import styles from \"./style.module.less\";\r\n import { useState } from \"react\";\r\n \r\n const { confirm } = Modal;\r\n \r\n const Roles = () => {\r\n   const queryClient = useQueryClient();\r\n-  const [form] = Form.useForm();\r\n+  const [form] = Form.useForm<IRoleQueryParams>();\r\n   const [modalVisible, setModalVisible] = useState(false);\r\n   const [editingRole, setEditingRole] = useState<IRole | null>(null);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [pageSize, setPageSize] = useState(10);\r\n+  const [searchValues, setSearchValues] = useState<Partial<IRoleQueryParams>>(\r\n+    {}\r\n+  );\r\n \r\n   // 获取角色列表\r\n   const { data: rolesData, isLoading } = useQuery({\r\n-    queryKey: [\"roles\", currentPage, pageSize, form.getFieldsValue()],\r\n+    queryKey: [\"roles\", currentPage, pageSize, searchValues],\r\n     queryFn: () =>\r\n       getRoles({\r\n         page: currentPage,\r\n         pageSize,\r\n-        ...form.getFieldsValue(),\r\n+        ...searchValues,\r\n       }),\r\n   });\r\n \r\n   // 删除角色\r\n@@ -93,11 +96,11 @@\n     {\r\n       title: \"状态\",\r\n       dataIndex: \"status\",\r\n       key: \"status\",\r\n-      render: (status: boolean) => (\r\n-        <Tag color={status ? \"success\" : \"error\"}>\r\n-          {status ? \"启用\" : \"禁用\"}\r\n+      render: (status: number) => (\r\n+        <Tag color={status === 1 ? \"success\" : \"error\"}>\r\n+          {status === 1 ? \"启用\" : \"禁用\"}\r\n         </Tag>\r\n       ),\r\n     },\r\n     {\r\n@@ -119,9 +122,9 @@\n           >\r\n             编辑\r\n           </Button>\r\n           <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n-            {record.status ? \"禁用\" : \"启用\"}\r\n+            {record.status === 1 ? \"禁用\" : \"启用\"}\r\n           </Button>\r\n           <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n             删除\r\n           </Button>\r\n@@ -130,24 +133,24 @@\n     },\r\n   ];\r\n \r\n   // 处理搜索\r\n-  const handleSearch = () => {\r\n+  const handleSearch = (values: Partial<IRoleQueryParams>) => {\r\n     setCurrentPage(1);\r\n-    queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n+    setSearchValues(values);\r\n   };\r\n \r\n   // 处理重置\r\n   const handleReset = () => {\r\n     form.resetFields();\r\n     setCurrentPage(1);\r\n-    queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n+    setSearchValues({});\r\n   };\r\n \r\n   return (\r\n     <div className={styles.container}>\r\n       <Card>\r\n-        <Form\r\n+        <Form<IRoleQueryParams>\r\n           form={form}\r\n           layout=\"inline\"\r\n           className={styles.searchForm}\r\n           onFinish={handleSearch}\r\n@@ -162,10 +165,10 @@\n             <Select\r\n               placeholder=\"请选择状态\"\r\n               allowClear\r\n               options={[\r\n-                { label: \"启用\", value: true },\r\n-                { label: \"禁用\", value: false },\r\n+                { label: \"启用\", value: 1 },\r\n+                { label: \"禁用\", value: 0 },\r\n               ]}\r\n             />\r\n           </Form.Item>\r\n           <Form.Item>\r\n@@ -197,9 +200,9 @@\n           loading={isLoading}\r\n           pagination={{\r\n             current: currentPage,\r\n             pageSize,\r\n-            total: rolesData?.data.total,\r\n+            total: rolesData?.data.pagination?.total || 0,\r\n             onChange: (page, size) => {\r\n               setCurrentPage(page);\r\n               setPageSize(size);\r\n             },\r\n"
                },
                {
                    "date": 1746098724569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -194,15 +194,15 @@\n         </div>\r\n \r\n         <Table\r\n           columns={columns}\r\n-          dataSource={rolesData?.data.list}\r\n+          dataSource={rolesData?.list}\r\n           rowKey=\"id\"\r\n           loading={isLoading}\r\n           pagination={{\r\n             current: currentPage,\r\n             pageSize,\r\n-            total: rolesData?.data.pagination?.total || 0,\r\n+            total: rolesData?.pagination?.total || 0,\r\n             onChange: (page, size) => {\r\n               setCurrentPage(page);\r\n               setPageSize(size);\r\n             },\r\n"
                }
            ],
            "date": 1746087770597,
            "name": "Commit-0",
            "content": "import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  message,\r\n} from \"antd\";\r\nimport { deleteRole, getRoles, toggleRoleStatus } from \"@/api/modules/role\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nimport type { IRole } from \"@/types/api/role\";\r\nimport RoleForm from \"./components/RoleForm\";\r\nimport styles from \"./style.module.less\";\r\nimport { useState } from \"react\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Roles = () => {\r\n  const queryClient = useQueryClient();\r\n  const [form] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingRole, setEditingRole] = useState<IRole | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  // 获取角色列表\r\n  const { data: rolesData, isLoading } = useQuery({\r\n    queryKey: [\"roles\", currentPage, pageSize, form.getFieldsValue()],\r\n    queryFn: () =>\r\n      getRoles({\r\n        page: currentPage,\r\n        pageSize,\r\n        ...form.getFieldsValue(),\r\n      }),\r\n  });\r\n\r\n  // 删除角色\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteRole,\r\n    onSuccess: () => {\r\n      message.success(\"删除成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n    },\r\n  });\r\n\r\n  // 切换角色状态\r\n  const toggleStatusMutation = useMutation({\r\n    mutationFn: toggleRoleStatus,\r\n    onSuccess: () => {\r\n      message.success(\"状态更新成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n    },\r\n  });\r\n\r\n  // 处理删除角色\r\n  const handleDelete = (id: number) => {\r\n    confirm({\r\n      title: \"确认删除\",\r\n      content: \"确定要删除这个角色吗？此操作不可恢复。\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => deleteMutation.mutate(id),\r\n    });\r\n  };\r\n\r\n  // 处理切换角色状态\r\n  const handleToggleStatus = (id: number) => {\r\n    toggleStatusMutation.mutate(id);\r\n  };\r\n\r\n  // 表格列配置\r\n  const columns = [\r\n    {\r\n      title: \"角色名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"角色编码\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: boolean) => (\r\n        <Tag color={status ? \"success\" : \"error\"}>\r\n          {status ? \"启用\" : \"禁用\"}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_: unknown, record: IRole) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setEditingRole(record);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n            {record.status ? \"禁用\" : \"启用\"}\r\n          </Button>\r\n          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 处理搜索\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n  };\r\n\r\n  // 处理重置\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card>\r\n        <Form\r\n          form={form}\r\n          layout=\"inline\"\r\n          className={styles.searchForm}\r\n          onFinish={handleSearch}\r\n        >\r\n          <Form.Item name=\"name\" label=\"角色名称\">\r\n            <Input placeholder=\"请输入角色名称\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"code\" label=\"角色编码\">\r\n            <Input placeholder=\"请输入角色编码\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"status\" label=\"状态\">\r\n            <Select\r\n              placeholder=\"请选择状态\"\r\n              allowClear\r\n              options={[\r\n                { label: \"启用\", value: true },\r\n                { label: \"禁用\", value: false },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                搜索\r\n              </Button>\r\n              <Button onClick={handleReset}>重置</Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <div className={styles.tableHeader}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setEditingRole(null);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            新增角色\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={rolesData?.data.list}\r\n          rowKey=\"id\"\r\n          loading={isLoading}\r\n          pagination={{\r\n            current: currentPage,\r\n            pageSize,\r\n            total: rolesData?.data.total,\r\n            onChange: (page, size) => {\r\n              setCurrentPage(page);\r\n              setPageSize(size);\r\n            },\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <RoleForm\r\n        visible={modalVisible}\r\n        editingRole={editingRole}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n          setEditingRole(null);\r\n        }}\r\n        onSuccess={() => {\r\n          setModalVisible(false);\r\n          setEditingRole(null);\r\n          queryClient.invalidateQueries({ queryKey: [\"roles\"] });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roles;"
        }
    ]
}