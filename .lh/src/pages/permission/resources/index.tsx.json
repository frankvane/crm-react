{
    "sourceFile": "src/pages/permission/resources/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1746087907054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746087917594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,17 +9,18 @@\n   Table,\r\n   Tag,\r\n   message,\r\n } from \"antd\";\r\n-import type { IResource, ResourceType } from \"@/types/api/resource\";\r\n import {\r\n   deleteResource,\r\n   getResources,\r\n   toggleResourceStatus,\r\n } from \"@/api/modules/resource\";\r\n import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n \r\n+import type { IResource } from \"@/types/api/resource\";\r\n import ResourceForm from \"./components/ResourceForm\";\r\n+import { ResourceType } from \"@/types/api/resource\";\r\n import styles from \"./style.module.less\";\r\n import { useState } from \"react\";\r\n \r\n const { confirm } = Modal;\r\n"
                },
                {
                    "date": 1746088927463,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,11 @@\n const Resources = () => {\r\n   const queryClient = useQueryClient();\r\n   const [form] = Form.useForm();\r\n   const [modalVisible, setModalVisible] = useState(false);\r\n-  const [editingResource, setEditingResource] = useState<IResource | null>(null);\r\n+  const [editingResource, setEditingResource] = useState<IResource | null>(\r\n+    null\r\n+  );\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [pageSize, setPageSize] = useState(10);\r\n \r\n   // 获取资源列表\r\n@@ -257,5 +259,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default Resources; \n\\ No newline at end of file\n+export default Resources;\r\n"
                },
                {
                    "date": 1746097744571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,16 +9,16 @@\n   Table,\r\n   Tag,\r\n   message,\r\n } from \"antd\";\r\n+import type { IResource, IResourceQueryParams } from \"@/types/api/resource\";\r\n import {\r\n   deleteResource,\r\n   getResources,\r\n   toggleResourceStatus,\r\n } from \"@/api/modules/resource\";\r\n import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n \r\n-import type { IResource } from \"@/types/api/resource\";\r\n import ResourceForm from \"./components/ResourceForm\";\r\n import { ResourceType } from \"@/types/api/resource\";\r\n import styles from \"./style.module.less\";\r\n import { useState } from \"react\";\r\n@@ -26,24 +26,27 @@\n const { confirm } = Modal;\r\n \r\n const Resources = () => {\r\n   const queryClient = useQueryClient();\r\n-  const [form] = Form.useForm();\r\n+  const [form] = Form.useForm<IResourceQueryParams>();\r\n   const [modalVisible, setModalVisible] = useState(false);\r\n   const [editingResource, setEditingResource] = useState<IResource | null>(\r\n     null\r\n   );\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [pageSize, setPageSize] = useState(10);\r\n+  const [searchValues, setSearchValues] = useState<\r\n+    Partial<IResourceQueryParams>\r\n+  >({});\r\n \r\n   // 获取资源列表\r\n   const { data: resourcesData, isLoading } = useQuery({\r\n-    queryKey: [\"resources\", currentPage, pageSize, form.getFieldsValue()],\r\n+    queryKey: [\"resources\", currentPage, pageSize, searchValues],\r\n     queryFn: () =>\r\n       getResources({\r\n         page: currentPage,\r\n         pageSize,\r\n-        ...form.getFieldsValue(),\r\n+        ...searchValues,\r\n       }),\r\n   });\r\n \r\n   // 删除资源\r\n@@ -118,11 +121,11 @@\n     {\r\n       title: \"状态\",\r\n       dataIndex: \"status\",\r\n       key: \"status\",\r\n-      render: (status: boolean) => (\r\n-        <Tag color={status ? \"success\" : \"error\"}>\r\n-          {status ? \"启用\" : \"禁用\"}\r\n+      render: (status: number) => (\r\n+        <Tag color={status === 1 ? \"success\" : \"error\"}>\r\n+          {status === 1 ? \"启用\" : \"禁用\"}\r\n         </Tag>\r\n       ),\r\n     },\r\n     {\r\n@@ -144,9 +147,9 @@\n           >\r\n             编辑\r\n           </Button>\r\n           <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n-            {record.status ? \"禁用\" : \"启用\"}\r\n+            {record.status === 1 ? \"禁用\" : \"启用\"}\r\n           </Button>\r\n           <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n             删除\r\n           </Button>\r\n@@ -155,24 +158,24 @@\n     },\r\n   ];\r\n \r\n   // 处理搜索\r\n-  const handleSearch = () => {\r\n+  const handleSearch = (values: Partial<IResourceQueryParams>) => {\r\n     setCurrentPage(1);\r\n-    queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n+    setSearchValues(values);\r\n   };\r\n \r\n   // 处理重置\r\n   const handleReset = () => {\r\n     form.resetFields();\r\n     setCurrentPage(1);\r\n-    queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n+    setSearchValues({});\r\n   };\r\n \r\n   return (\r\n     <div className={styles.container}>\r\n       <Card>\r\n-        <Form\r\n+        <Form<IResourceQueryParams>\r\n           form={form}\r\n           layout=\"inline\"\r\n           className={styles.searchForm}\r\n           onFinish={handleSearch}\r\n@@ -198,10 +201,10 @@\n             <Select\r\n               placeholder=\"请选择状态\"\r\n               allowClear\r\n               options={[\r\n-                { label: \"启用\", value: true },\r\n-                { label: \"禁用\", value: false },\r\n+                { label: \"启用\", value: 1 },\r\n+                { label: \"禁用\", value: 0 },\r\n               ]}\r\n             />\r\n           </Form.Item>\r\n           <Form.Item>\r\n@@ -233,9 +236,9 @@\n           loading={isLoading}\r\n           pagination={{\r\n             current: currentPage,\r\n             pageSize,\r\n-            total: resourcesData?.data.total,\r\n+            total: resourcesData?.data.pagination?.total || 0,\r\n             onChange: (page, size) => {\r\n               setCurrentPage(page);\r\n               setPageSize(size);\r\n             },\r\n"
                }
            ],
            "date": 1746087907054,
            "name": "Commit-0",
            "content": "import {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Modal,\r\n  Select,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  message,\r\n} from \"antd\";\r\nimport type { IResource, ResourceType } from \"@/types/api/resource\";\r\nimport {\r\n  deleteResource,\r\n  getResources,\r\n  toggleResourceStatus,\r\n} from \"@/api/modules/resource\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n\r\nimport ResourceForm from \"./components/ResourceForm\";\r\nimport styles from \"./style.module.less\";\r\nimport { useState } from \"react\";\r\n\r\nconst { confirm } = Modal;\r\n\r\nconst Resources = () => {\r\n  const queryClient = useQueryClient();\r\n  const [form] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingResource, setEditingResource] = useState<IResource | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  // 获取资源列表\r\n  const { data: resourcesData, isLoading } = useQuery({\r\n    queryKey: [\"resources\", currentPage, pageSize, form.getFieldsValue()],\r\n    queryFn: () =>\r\n      getResources({\r\n        page: currentPage,\r\n        pageSize,\r\n        ...form.getFieldsValue(),\r\n      }),\r\n  });\r\n\r\n  // 删除资源\r\n  const deleteMutation = useMutation({\r\n    mutationFn: deleteResource,\r\n    onSuccess: () => {\r\n      message.success(\"删除成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n    },\r\n  });\r\n\r\n  // 切换资源状态\r\n  const toggleStatusMutation = useMutation({\r\n    mutationFn: toggleResourceStatus,\r\n    onSuccess: () => {\r\n      message.success(\"状态更新成功\");\r\n      queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n    },\r\n  });\r\n\r\n  // 处理删除资源\r\n  const handleDelete = (id: number) => {\r\n    confirm({\r\n      title: \"确认删除\",\r\n      content: \"确定要删除这个资源吗？此操作不可恢复。\",\r\n      okText: \"确认\",\r\n      cancelText: \"取消\",\r\n      onOk: () => deleteMutation.mutate(id),\r\n    });\r\n  };\r\n\r\n  // 处理切换资源状态\r\n  const handleToggleStatus = (id: number) => {\r\n    toggleStatusMutation.mutate(id);\r\n  };\r\n\r\n  // 表格列配置\r\n  const columns = [\r\n    {\r\n      title: \"资源名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n    },\r\n    {\r\n      title: \"资源编码\",\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n    },\r\n    {\r\n      title: \"资源类型\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      render: (type: ResourceType) => {\r\n        const typeMap = {\r\n          [ResourceType.MENU]: { color: \"blue\", text: \"菜单\" },\r\n          [ResourceType.BUTTON]: { color: \"green\", text: \"按钮\" },\r\n          [ResourceType.API]: { color: \"purple\", text: \"接口\" },\r\n        };\r\n        return <Tag color={typeMap[type].color}>{typeMap[type].text}</Tag>;\r\n      },\r\n    },\r\n    {\r\n      title: \"路径\",\r\n      dataIndex: \"path\",\r\n      key: \"path\",\r\n    },\r\n    {\r\n      title: \"排序\",\r\n      dataIndex: \"sort\",\r\n      key: \"sort\",\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n      render: (status: boolean) => (\r\n        <Tag color={status ? \"success\" : \"error\"}>\r\n          {status ? \"启用\" : \"禁用\"}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"createdAt\",\r\n      key: \"createdAt\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      key: \"action\",\r\n      render: (_: unknown, record: IResource) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => {\r\n              setEditingResource(record);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            编辑\r\n          </Button>\r\n          <Button type=\"link\" onClick={() => handleToggleStatus(record.id)}>\r\n            {record.status ? \"禁用\" : \"启用\"}\r\n          </Button>\r\n          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 处理搜索\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n  };\r\n\r\n  // 处理重置\r\n  const handleReset = () => {\r\n    form.resetFields();\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card>\r\n        <Form\r\n          form={form}\r\n          layout=\"inline\"\r\n          className={styles.searchForm}\r\n          onFinish={handleSearch}\r\n        >\r\n          <Form.Item name=\"name\" label=\"资源名称\">\r\n            <Input placeholder=\"请输入资源名称\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"code\" label=\"资源编码\">\r\n            <Input placeholder=\"请输入资源编码\" allowClear />\r\n          </Form.Item>\r\n          <Form.Item name=\"type\" label=\"资源类型\">\r\n            <Select\r\n              placeholder=\"请选择资源类型\"\r\n              allowClear\r\n              options={[\r\n                { label: \"菜单\", value: ResourceType.MENU },\r\n                { label: \"按钮\", value: ResourceType.BUTTON },\r\n                { label: \"接口\", value: ResourceType.API },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"status\" label=\"状态\">\r\n            <Select\r\n              placeholder=\"请选择状态\"\r\n              allowClear\r\n              options={[\r\n                { label: \"启用\", value: true },\r\n                { label: \"禁用\", value: false },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                搜索\r\n              </Button>\r\n              <Button onClick={handleReset}>重置</Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <div className={styles.tableHeader}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              setEditingResource(null);\r\n              setModalVisible(true);\r\n            }}\r\n          >\r\n            新增资源\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={resourcesData?.data.list}\r\n          rowKey=\"id\"\r\n          loading={isLoading}\r\n          pagination={{\r\n            current: currentPage,\r\n            pageSize,\r\n            total: resourcesData?.data.total,\r\n            onChange: (page, size) => {\r\n              setCurrentPage(page);\r\n              setPageSize(size);\r\n            },\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <ResourceForm\r\n        visible={modalVisible}\r\n        editingResource={editingResource}\r\n        onCancel={() => {\r\n          setModalVisible(false);\r\n          setEditingResource(null);\r\n        }}\r\n        onSuccess={() => {\r\n          setModalVisible(false);\r\n          setEditingResource(null);\r\n          queryClient.invalidateQueries({ queryKey: [\"resources\"] });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Resources; "
        }
    ]
}