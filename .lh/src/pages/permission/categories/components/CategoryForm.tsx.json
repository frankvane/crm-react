{
    "sourceFile": "src/pages/permission/categories/components/CategoryForm.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1746088273182,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746088315071,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Form, Input, InputNumber, Modal, Select, Switch } from \"antd\";\r\n import type {\r\n   ICategory,\r\n+  ICategoryTreeNode,\r\n   ICreateCategoryParams,\r\n   IUpdateCategoryParams,\r\n } from \"@/types/api/category\";\r\n import {\r\n@@ -90,9 +91,15 @@\n     }\r\n   };\r\n \r\n   // 递归构建树形选项\r\n-  const buildTreeOptions = (nodes: ICategory[] = []) => {\r\n+  interface TreeOption {\r\n+    label: string;\r\n+    value: number;\r\n+    children?: TreeOption[];\r\n+  }\r\n+\r\n+  const buildTreeOptions = (nodes: ICategoryTreeNode[] = []): TreeOption[] => {\r\n     return nodes.map((node) => ({\r\n       label: node.name,\r\n       value: node.id,\r\n       children: node.children ? buildTreeOptions(node.children) : undefined,\r\n"
                }
            ],
            "date": 1746088273182,
            "name": "Commit-0",
            "content": "import { Form, Input, InputNumber, Modal, Select, Switch } from \"antd\";\r\nimport type {\r\n  ICategory,\r\n  ICreateCategoryParams,\r\n  IUpdateCategoryParams,\r\n} from \"@/types/api/category\";\r\nimport { createCategory, getCategoryTree, updateCategory } from \"@/api/modules/category\";\r\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\r\n\r\nimport { getCategoryTypes } from \"@/api/modules/category-type\";\r\nimport { message } from \"antd\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface ICategoryFormProps {\r\n  visible: boolean;\r\n  editingCategory: ICategory | null;\r\n  onCancel: () => void;\r\n  onSuccess: () => void;\r\n}\r\n\r\nconst CategoryForm = ({\r\n  visible,\r\n  editingCategory,\r\n  onCancel,\r\n  onSuccess,\r\n}: ICategoryFormProps) => {\r\n  const [form] = Form.useForm<ICreateCategoryParams>();\r\n\r\n  // 获取分类类型列表\r\n  const { data: categoryTypesData } = useQuery({\r\n    queryKey: [\"categoryTypes\"],\r\n    queryFn: () => getCategoryTypes({ page: 1, pageSize: 100 }),\r\n  });\r\n\r\n  // 获取分类树\r\n  const { data: categoryTreeData } = useQuery({\r\n    queryKey: [\"categoryTree\", form.getFieldValue(\"typeId\")],\r\n    queryFn: () => getCategoryTree(form.getFieldValue(\"typeId\")),\r\n    enabled: !!form.getFieldValue(\"typeId\"),\r\n  });\r\n\r\n  // 创建分类\r\n  const createMutation = useMutation({\r\n    mutationFn: (data: ICreateCategoryParams) => createCategory(data),\r\n    onSuccess: () => {\r\n      message.success(\"创建成功\");\r\n      onSuccess();\r\n    },\r\n  });\r\n\r\n  // 更新分类\r\n  const updateMutation = useMutation({\r\n    mutationFn: ({ id, ...data }: IUpdateCategoryParams & { id: number }) =>\r\n      updateCategory(id, data),\r\n    onSuccess: () => {\r\n      message.success(\"更新成功\");\r\n      onSuccess();\r\n    },\r\n  });\r\n\r\n  // 监听表单显示状态\r\n  useEffect(() => {\r\n    if (visible) {\r\n      if (editingCategory) {\r\n        form.setFieldsValue(editingCategory);\r\n      } else {\r\n        form.resetFields();\r\n      }\r\n    }\r\n  }, [visible, editingCategory, form]);\r\n\r\n  // 处理表单提交\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      if (editingCategory) {\r\n        updateMutation.mutate({\r\n          id: editingCategory.id,\r\n          ...values,\r\n        });\r\n      } else {\r\n        createMutation.mutate(values);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"表单验证失败:\", error);\r\n    }\r\n  };\r\n\r\n  // 递归构建树形选项\r\n  const buildTreeOptions = (nodes: ICategory[] = []) => {\r\n    return nodes.map((node) => ({\r\n      label: node.name,\r\n      value: node.id,\r\n      children: node.children ? buildTreeOptions(node.children) : undefined,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={editingCategory ? \"编辑分类\" : \"新增分类\"}\r\n      open={visible}\r\n      onCancel={onCancel}\r\n      onOk={handleSubmit}\r\n      confirmLoading={createMutation.isPending || updateMutation.isPending}\r\n    >\r\n      <Form form={form} layout=\"vertical\" initialValues={{ status: true }}>\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"分类名称\"\r\n          rules={[{ required: true, message: \"请输入分类名称\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类名称\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"code\"\r\n          label=\"分类编码\"\r\n          rules={[{ required: true, message: \"请输入分类编码\" }]}\r\n        >\r\n          <Input placeholder=\"请输入分类编码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"typeId\"\r\n          label=\"分类类型\"\r\n          rules={[{ required: true, message: \"请选择分类类型\" }]}\r\n        >\r\n          <Select\r\n            placeholder=\"请选择分类类型\"\r\n            options={categoryTypesData?.data.list.map((type) => ({\r\n              label: type.name,\r\n              value: type.id,\r\n            }))}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"parentId\" label=\"父级分类\">\r\n          <Select\r\n            placeholder=\"请选择父级分类\"\r\n            allowClear\r\n            options={buildTreeOptions(categoryTreeData?.data)}\r\n            disabled={!form.getFieldValue(\"typeId\")}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"description\" label=\"描述\">\r\n          <Input.TextArea placeholder=\"请输入描述\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"sort\" label=\"排序\">\r\n          <InputNumber placeholder=\"请输入排序\" style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"status\" label=\"状态\" valuePropName=\"checked\">\r\n          <Switch checkedChildren=\"启用\" unCheckedChildren=\"禁用\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CategoryForm; "
        }
    ]
}