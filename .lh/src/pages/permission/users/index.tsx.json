{
    "sourceFile": "src/pages/permission/users/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1746087279588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1746087497962,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,58 +9,76 @@\n   Table,\r\n   Tag,\r\n   message,\r\n } from \"antd\";\r\n-import type { IUser, IUserQueryParams } from \"@/types/api/user\";\r\n import { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n+import { deleteUser, getUsers, toggleUserStatus } from \"@/api/modules/user\";\r\n import { useCallback, useState } from \"react\";\r\n import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n \r\n import type { ColumnsType } from \"antd/es/table\";\r\n+import type { IPaginationParams } from \"@/types/api/common\";\r\n+import type { IUser } from \"@/types/api/user\";\r\n import UserForm from \"./components/UserForm\";\r\n import styles from \"./style.module.less\";\r\n-import { userApi } from \"@/api/modules/user\";\r\n \r\n+const { confirm } = Modal;\r\n+\r\n const Users = () => {\r\n-  const [searchForm] = Form.useForm();\r\n+  const queryClient = useQueryClient();\r\n+  const [form] = Form.useForm();\r\n   const [modalVisible, setModalVisible] = useState(false);\r\n   const [editingUser, setEditingUser] = useState<IUser | null>(null);\r\n   const [currentPage, setCurrentPage] = useState(1);\r\n   const [pageSize, setPageSize] = useState(10);\r\n \r\n-  const queryClient = useQueryClient();\r\n-\r\n   // 获取用户列表\r\n   const { data: usersData, isLoading } = useQuery({\r\n-    queryKey: [\"users\", currentPage, pageSize, searchForm.getFieldsValue()],\r\n+    queryKey: [\"users\", currentPage, pageSize, form.getFieldsValue()],\r\n     queryFn: () =>\r\n-      userApi.getUsers({\r\n+      getUsers({\r\n         page: currentPage,\r\n         pageSize,\r\n-        ...searchForm.getFieldsValue(),\r\n+        ...form.getFieldsValue(),\r\n       }),\r\n   });\r\n \r\n   // 删除用户\r\n-  const deleteUserMutation = useMutation({\r\n-    mutationFn: userApi.deleteUser,\r\n+  const deleteMutation = useMutation({\r\n+    mutationFn: deleteUser,\r\n     onSuccess: () => {\r\n       message.success(\"删除成功\");\r\n       queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n     },\r\n   });\r\n \r\n   // 切换用户状态\r\n   const toggleStatusMutation = useMutation({\r\n-    mutationFn: userApi.toggleUserStatus,\r\n+    mutationFn: toggleUserStatus,\r\n     onSuccess: () => {\r\n       message.success(\"状态更新成功\");\r\n       queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n     },\r\n   });\r\n \r\n+  // 处理删除用户\r\n+  const handleDelete = (id: number) => {\r\n+    confirm({\r\n+      title: \"确认删除\",\r\n+      content: \"确定要删除这个用户吗？此操作不可恢复。\",\r\n+      okText: \"确认\",\r\n+      cancelText: \"取消\",\r\n+      onOk: () => deleteMutation.mutate(id),\r\n+    });\r\n+  };\r\n+\r\n+  // 处理切换用户状态\r\n+  const handleToggleStatus = (id: number) => {\r\n+    toggleStatusMutation.mutate(id);\r\n+  };\r\n+\r\n   // 表格列配置\r\n-  const columns: ColumnsType<IUser> = [\r\n+  const columns = [\r\n     {\r\n       title: \"用户名\",\r\n       dataIndex: \"username\",\r\n       key: \"username\",\r\n@@ -73,11 +91,11 @@\n     {\r\n       title: \"状态\",\r\n       dataIndex: \"status\",\r\n       key: \"status\",\r\n-      render: (status: string) => (\r\n-        <Tag color={status === \"active\" ? \"success\" : \"error\"}>\r\n-          {status === \"active\" ? \"启用\" : \"禁用\"}\r\n+      render: (status: boolean) => (\r\n+        <Tag color={status ? \"success\" : \"error\"}>\r\n+          {status ? \"启用\" : \"禁用\"}\r\n         </Tag>\r\n       ),\r\n     },\r\n     {\r\n@@ -87,20 +105,27 @@\n     },\r\n     {\r\n       title: \"操作\",\r\n       key: \"action\",\r\n-      render: (_, record) => (\r\n+      render: (_: unknown, record: IUser) => (\r\n         <Space size=\"middle\">\r\n-          <Button type=\"link\" onClick={() => handleEdit(record)}>\r\n+          <Button type=\"link\" onClick={() => {\r\n+            setEditingUser(record);\r\n+            setModalVisible(true);\r\n+          }}>\r\n             编辑\r\n           </Button>\r\n           <Button\r\n             type=\"link\"\r\n-            onClick={() => toggleStatusMutation.mutate(record.id)}\r\n+            onClick={() => handleToggleStatus(record.id)}\r\n           >\r\n-            {record.status === \"active\" ? \"禁用\" : \"启用\"}\r\n+            {record.status ? \"禁用\" : \"启用\"}\r\n           </Button>\r\n-          <Button type=\"link\" danger onClick={() => handleDelete(record.id)}>\r\n+          <Button\r\n+            type=\"link\"\r\n+            danger\r\n+            onClick={() => handleDelete(record.id)}\r\n+          >\r\n             删除\r\n           </Button>\r\n         </Space>\r\n       ),\r\n@@ -114,61 +139,35 @@\n   };\r\n \r\n   // 处理重置\r\n   const handleReset = () => {\r\n-    searchForm.resetFields();\r\n+    form.resetFields();\r\n     setCurrentPage(1);\r\n     queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n   };\r\n \r\n-  // 处理编辑\r\n-  const handleEdit = (user: IUser) => {\r\n-    setEditingUser(user);\r\n-    setModalVisible(true);\r\n-  };\r\n-\r\n-  // 处理删除\r\n-  const handleDelete = (id: number) => {\r\n-    Modal.confirm({\r\n-      title: \"确认删除\",\r\n-      content: \"确定要删除这个用户吗？\",\r\n-      onOk: () => deleteUserMutation.mutate(id),\r\n-    });\r\n-  };\r\n-\r\n-  // 处理模态框关闭\r\n-  const handleModalClose = () => {\r\n-    setModalVisible(false);\r\n-    setEditingUser(null);\r\n-  };\r\n-\r\n   return (\r\n     <div className={styles.container}>\r\n       <Card>\r\n         <Form\r\n-          form={searchForm}\r\n+          form={form}\r\n           layout=\"inline\"\r\n+          className={styles.searchForm}\r\n           onFinish={handleSearch}\r\n-          className={styles.searchForm}\r\n         >\r\n-          <Form.Item name=\"username\">\r\n-            <Input\r\n-              placeholder=\"用户名\"\r\n-              prefix={<SearchOutlined />}\r\n-              allowClear\r\n-            />\r\n+          <Form.Item name=\"username\" label=\"用户名\">\r\n+            <Input placeholder=\"请输入用户名\" allowClear />\r\n           </Form.Item>\r\n-          <Form.Item name=\"email\">\r\n-            <Input placeholder=\"邮箱\" prefix={<SearchOutlined />} allowClear />\r\n+          <Form.Item name=\"email\" label=\"邮箱\">\r\n+            <Input placeholder=\"请输入邮箱\" allowClear />\r\n           </Form.Item>\r\n-          <Form.Item name=\"status\">\r\n+          <Form.Item name=\"status\" label=\"状态\">\r\n             <Select\r\n-              placeholder=\"状态\"\r\n+              placeholder=\"请选择状态\"\r\n               allowClear\r\n-              style={{ width: 120 }}\r\n               options={[\r\n-                { label: \"启用\", value: \"active\" },\r\n-                { label: \"禁用\", value: \"inactive\" },\r\n+                { label: \"启用\", value: true },\r\n+                { label: \"禁用\", value: false },\r\n               ]}\r\n             />\r\n           </Form.Item>\r\n           <Form.Item>\r\n@@ -183,12 +182,14 @@\n \r\n         <div className={styles.tableHeader}>\r\n           <Button\r\n             type=\"primary\"\r\n-            icon={<PlusOutlined />}\r\n-            onClick={() => setModalVisible(true)}\r\n+            onClick={() => {\r\n+              setEditingUser(null);\r\n+              setModalVisible(true);\r\n+            }}\r\n           >\r\n-            新建用户\r\n+            新增用户\r\n           </Button>\r\n         </div>\r\n \r\n         <Table\r\n@@ -210,11 +211,15 @@\n \r\n       <UserForm\r\n         visible={modalVisible}\r\n         editingUser={editingUser}\r\n-        onCancel={handleModalClose}\r\n+        onCancel={() => {\r\n+          setModalVisible(false);\r\n+          setEditingUser(null);\r\n+        }}\r\n         onSuccess={() => {\r\n-          handleModalClose();\r\n+          setModalVisible(false);\r\n+          setEditingUser(null);\r\n           queryClient.invalidateQueries({ queryKey: [\"users\"] });\r\n         }}\r\n       />\r\n     </div>\r\n"
                },
                {
                    "date": 1746087509318,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,6 @@\n+import { useState } from \"react\";\r\n+import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\n import {\r\n   Button,\r\n   Card,\r\n   Form,\r\n@@ -9,17 +11,11 @@\n   Table,\r\n   Tag,\r\n   message,\r\n } from \"antd\";\r\n-import { PlusOutlined, SearchOutlined } from \"@ant-design/icons\";\r\n-import { deleteUser, getUsers, toggleUserStatus } from \"@/api/modules/user\";\r\n-import { useCallback, useState } from \"react\";\r\n-import { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\n-\r\n-import type { ColumnsType } from \"antd/es/table\";\r\n-import type { IPaginationParams } from \"@/types/api/common\";\r\n import type { IUser } from \"@/types/api/user\";\r\n import UserForm from \"./components/UserForm\";\r\n+import { deleteUser, getUsers, toggleUserStatus } from \"@/api/modules/user\";\r\n import styles from \"./style.module.less\";\r\n \r\n const { confirm } = Modal;\r\n \r\n"
                }
            ],
            "date": 1746087279588,
            "name": "Commit-0",
            "content": "import { Button, Card, Form, Input, Modal, Select, Space, Table, Tag, message } from 'antd';\r\nimport type { IUser, IUserQueryParams } from '@/types/api/user';\r\nimport { PlusOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport { useCallback, useState } from 'react';\r\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\r\n\r\nimport type { ColumnsType } from 'antd/es/table';\r\nimport UserForm from './components/UserForm';\r\nimport styles from './style.module.less';\r\nimport { userApi } from '@/api/modules/user';\r\n\r\nconst Users = () => {\r\n  const [searchForm] = Form.useForm();\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingUser, setEditingUser] = useState<IUser | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [pageSize, setPageSize] = useState(10);\r\n\r\n  const queryClient = useQueryClient();\r\n\r\n  // 获取用户列表\r\n  const { data: usersData, isLoading } = useQuery({\r\n    queryKey: ['users', currentPage, pageSize, searchForm.getFieldsValue()],\r\n    queryFn: () => userApi.getUsers({\r\n      page: currentPage,\r\n      pageSize,\r\n      ...searchForm.getFieldsValue(),\r\n    }),\r\n  });\r\n\r\n  // 删除用户\r\n  const deleteUserMutation = useMutation({\r\n    mutationFn: userApi.deleteUser,\r\n    onSuccess: () => {\r\n      message.success('删除成功');\r\n      queryClient.invalidateQueries({ queryKey: ['users'] });\r\n    },\r\n  });\r\n\r\n  // 切换用户状态\r\n  const toggleStatusMutation = useMutation({\r\n    mutationFn: userApi.toggleUserStatus,\r\n    onSuccess: () => {\r\n      message.success('状态更新成功');\r\n      queryClient.invalidateQueries({ queryKey: ['users'] });\r\n    },\r\n  });\r\n\r\n  // 表格列配置\r\n  const columns: ColumnsType<IUser> = [\r\n    {\r\n      title: '用户名',\r\n      dataIndex: 'username',\r\n      key: 'username',\r\n    },\r\n    {\r\n      title: '邮箱',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: '状态',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n      render: (status: string) => (\r\n        <Tag color={status === 'active' ? 'success' : 'error'}>\r\n          {status === 'active' ? '启用' : '禁用'}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      title: '创建时间',\r\n      dataIndex: 'createdAt',\r\n      key: 'createdAt',\r\n    },\r\n    {\r\n      title: '操作',\r\n      key: 'action',\r\n      render: (_, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"link\" onClick={() => handleEdit(record)}>\r\n            编辑\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            onClick={() => toggleStatusMutation.mutate(record.id)}\r\n          >\r\n            {record.status === 'active' ? '禁用' : '启用'}\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            danger\r\n            onClick={() => handleDelete(record.id)}\r\n          >\r\n            删除\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  // 处理搜索\r\n  const handleSearch = () => {\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: ['users'] });\r\n  };\r\n\r\n  // 处理重置\r\n  const handleReset = () => {\r\n    searchForm.resetFields();\r\n    setCurrentPage(1);\r\n    queryClient.invalidateQueries({ queryKey: ['users'] });\r\n  };\r\n\r\n  // 处理编辑\r\n  const handleEdit = (user: IUser) => {\r\n    setEditingUser(user);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  // 处理删除\r\n  const handleDelete = (id: number) => {\r\n    Modal.confirm({\r\n      title: '确认删除',\r\n      content: '确定要删除这个用户吗？',\r\n      onOk: () => deleteUserMutation.mutate(id),\r\n    });\r\n  };\r\n\r\n  // 处理模态框关闭\r\n  const handleModalClose = () => {\r\n    setModalVisible(false);\r\n    setEditingUser(null);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card>\r\n        <Form\r\n          form={searchForm}\r\n          layout=\"inline\"\r\n          onFinish={handleSearch}\r\n          className={styles.searchForm}\r\n        >\r\n          <Form.Item name=\"username\">\r\n            <Input\r\n              placeholder=\"用户名\"\r\n              prefix={<SearchOutlined />}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              placeholder=\"邮箱\"\r\n              prefix={<SearchOutlined />}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n          <Form.Item name=\"status\">\r\n            <Select\r\n              placeholder=\"状态\"\r\n              allowClear\r\n              style={{ width: 120 }}\r\n              options={[\r\n                { label: '启用', value: 'active' },\r\n                { label: '禁用', value: 'inactive' },\r\n              ]}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                搜索\r\n              </Button>\r\n              <Button onClick={handleReset}>重置</Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <div className={styles.tableHeader}>\r\n          <Button\r\n            type=\"primary\"\r\n            icon={<PlusOutlined />}\r\n            onClick={() => setModalVisible(true)}\r\n          >\r\n            新建用户\r\n          </Button>\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          dataSource={usersData?.data.list}\r\n          rowKey=\"id\"\r\n          loading={isLoading}\r\n          pagination={{\r\n            current: currentPage,\r\n            pageSize,\r\n            total: usersData?.data.total,\r\n            onChange: (page, size) => {\r\n              setCurrentPage(page);\r\n              setPageSize(size);\r\n            },\r\n          }}\r\n        />\r\n      </Card>\r\n\r\n      <UserForm\r\n        visible={modalVisible}\r\n        editingUser={editingUser}\r\n        onCancel={handleModalClose}\r\n        onSuccess={() => {\r\n          handleModalClose();\r\n          queryClient.invalidateQueries({ queryKey: ['users'] });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users; "
        }
    ]
}